{"version":3,"sources":["NavBar.js","FoodStation.js","FoodDeliveryForm.js","RequestModal.js","MyHistoryPanel.js","ShortStrings.js","RequestsPanel.js","RegisterForm.js","LoginForm.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","state","apiUrl","title","isLoggedIn","onLoginChange","loginModalChange","bind","registerModalChange","prevProps","oldTitle","oldIsLoggedin","this","setState","fetch","method","credentials","then","response","json","data","userId","location","doLogout","tab","pathname","slice","prettyTabName","toPrettyTabName","className","as","Link","to","data-toggle","aria-expanded","type","data-target","aria-controls","aria-label","id","Nav","href","aria-haspopup","aria-labelledby","value","onClick","React","Component","withRouter","FoodStation","None","Pit","Starbucks","GrabNGo","FoodDeliveryForm","error","foodStation","event","target","preventDefault","sendInfoNotification","formData","FormData","request","schemaVersion","orderNumber","get","validationError","trim","validateRequest","body","JSON","stringify","headers","ok","catch","history","push","Error","message","foodStationChanged","handleSubmit","onSubmit","role","onChange","name","required","disabled","placeholder","toLocalDelta","timestamp","time","Date","parse","date","RequestModal","requestModalShow","requestModalChange","requestModalInfo","Modal","show","onHide","centered","Header","Body","created","deliverer","timeDelivererFound","sender","fullName","dormAndRoom","email","hasAllergy","allergies","Footer","MyHistoryPanel","myHistory","hasMyHistoryLoaded","_id","requestId","status","hashedPassword","getDeliveries","requestChange","historyIndex","parseInt","myHistoryList","map","historyEntry","index","key","length","style","display","src","process","alt","toString","strings","prefixAgo","prefixFromNow","suffixAgo","suffixFromNow","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","wordSeparator","RequestsPanel","requests","haveRequestsLoaded","getRequests","newRequests","handleDelivery","requestsLength","requestsList","req","formatter","buildFormatter","englishStrings","RegisterForm","checked","password","registerData","includes","console","log","registerModalShow","registerModalHide","allergyChanged","autoComplete","defaultChecked","htmlFor","data-dismiss","Login","loginData","loginModalShow","App","startSession","NotificationManager","info","basename","hashType","LoginForm","exact","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a557e4ac.chunk.js","sourcesContent":["import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction toPrettyTabName(tab) {\n  if (tab === \"all-requests\" || tab === \"\") {\n    return \"Deliver!\";\n  }\n  if (tab === \"ask-for-delivery\") {\n    return \"Request\";\n  }\n  if (tab === \"my-deliveries\") {\n    return \"My history\";\n  }\n  return \"\";\n}\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiUrl: props.apiUrl,\n      title: props.title,\n      isLoggedIn: props.isLoggedIn,\n      onLoginChange: props.onLoginChange,\n      loginModalChange: props.loginModalChange.bind(this),\n      registerModalChange: props.registerModalChange.bind(this),\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { title: oldTitle, isLoggedIn: oldIsLoggedin } = prevProps;\n    const { title, isLoggedIn } = this.props;\n\n    if (title !== oldTitle || isLoggedIn !== oldIsLoggedin) {\n      this.setState({ title, isLoggedIn });\n    }\n  }\n\n  async doLogout() {\n    fetch(`${this.state.apiUrl}/auth/logout`, {\n      method: \"POST\",\n      credentials: \"include\",\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        this.state.onLoginChange({\n          isLoggedIn: false,\n          userId: null,\n        })\n      );\n  }\n\n  render() {\n    const {\n      title,\n      isLoggedIn,\n      loginModalChange,\n      registerModalChange,\n    } = this.state;\n    const { location } = this.props;\n    const doLogout = this.doLogout.bind(this);\n    const tab = location.pathname.slice(1);\n    const prettyTabName = toPrettyTabName(tab);\n\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark primary-color\">\n        <Link as={Link} className=\"navbar-brand\" to=\"all-requests\">\n          {title}\n        </Link>\n\n        <div\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          aria-expanded=\"false\"\n        >\n          {prettyTabName}\n        </div>\n\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#basicExampleNav\"\n          aria-controls=\"basicExampleNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li\n              className={`nav-item ${\n                tab === \"all-requests\" || tab === \"\" ? \"active\" : \"\"\n              }`}\n            >\n              <Nav.Link\n                className=\"nav-link\"\n                as={Link}\n                href=\"all-requests\"\n                to=\"all-requests\"\n              >\n                Deliver!\n              </Nav.Link>\n            </li>\n            <li\n              className={`nav-item ${\n                tab === \"ask-for-delivery\" ? \"active\" : \"\"\n              }`}\n            >\n              <Nav.Link\n                className=\"nav-link\"\n                as={Link}\n                href=\"ask-for-delivery\"\n                to=\"ask-for-delivery\"\n              >\n                Ask for delivery\n              </Nav.Link>\n            </li>\n            <li\n              className={`nav-item ${tab === \"my-deliveries\" ? \"active\" : \"\"}`}\n            >\n              <Nav.Link\n                className=\"nav-link\"\n                as={Link}\n                href=\"my-deliveries\"\n                to=\"my-deliveries\"\n              >\n                My requests and deliveries\n              </Nav.Link>\n            </li>\n          </ul>\n\n          <ul className=\"navbar-nav mr-auto mr-sm-2\">\n            <li className=\"nav-item dropdown\">\n              <div\n                className=\"nav-link dropdown-toggle waves-effect waves-light\"\n                id=\"navbarDropdownMenuLink-4\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                href=\"#\"\n                aria-expanded=\"true\"\n              >\n                <i className=\"fas fa-user\" />\n                {isLoggedIn ? \"Profile\" : \"Not logged in\"}\n              </div>\n              <div\n                className=\"dropdown-menu dropdown-menu-right dropdown-info\"\n                aria-labelledby=\"navbarDropdownMenuLink-4\"\n              >\n                {isLoggedIn === false && (\n                  <div>\n                    <button\n                      value\n                      className=\"dropdown-item waves-effect waves-light\"\n                      onClick={registerModalChange}\n                    >\n                      Register\n                    </button>\n                    <button\n                      value\n                      className=\"dropdown-item waves-effect waves-light\"\n                      onClick={loginModalChange}\n                    >\n                      Login\n                    </button>\n                  </div>\n                )}\n                {isLoggedIn === true && (\n                  <div>\n                    <button\n                      id=\"openMyProfile\"\n                      className=\"dropdown-item waves-effect waves-light\"\n                    >\n                      My profile\n                    </button>\n                    <button\n                      className=\"dropdown-item waves-effect waves-light\"\n                      onClick={doLogout}\n                    >\n                      Logout\n                    </button>\n                  </div>\n                )}\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(NavBar);\n","const FoodStation = {\n  None: \"\", // Empty string isn't ideal, but required for correct <select required> behavior.\n  Pit: \"Pit\",\n  Starbucks: \"Starbucks\",\n  GrabNGo: \"Grab N' Go\",\n};\n\nexport default FoodStation;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport FoodStation from \"./FoodStation\";\n\nfunction validateRequest(request) {\n  if (request.schemaVersion.trim() === \"\") {\n    return \"Schema version is empty\";\n  }\n\n  return \"\";\n}\n\nclass FoodDeliveryForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      foodStation: FoodStation.None,\n    };\n  }\n\n  foodStationChanged(event) {\n    this.setState({\n      foodStation: event.target.value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { apiUrl, userId, isLoggedIn, sendInfoNotification } = this.props;\n    const formData = new FormData(event.target);\n\n    const schemaVersion = \"request.1\";\n    const { foodStation } = this.state; // hack because select's default\n    // value doesn't always work.\n    const orderNumber = formData.get(\"orderNumber\");\n\n    const request = {\n      schemaVersion,\n      userId,\n      foodStation,\n      orderNumber,\n    };\n    const validationError =\n      isLoggedIn !== true ? \"You must be logged in\" : validateRequest(request);\n\n    if (validationError !== \"\") {\n      this.setState({\n        error: `Error: ${validationError}.`,\n      });\n      return;\n    }\n\n    fetch(`${apiUrl}/create-request`, {\n      method: \"POST\",\n      credentials: \"include\",\n      body: JSON.stringify(request),\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    }).then((response) => {\n      if (!response.ok) {\n        response\n          .json()\n          .then((data) => {\n            throw new Error(`Error: ${data.message}`);\n          })\n          .catch((error) =>\n            this.setState({\n              error,\n            })\n          );\n      } else {\n        response\n          .json()\n          .catch((error) =>\n            this.setState({\n              error,\n            })\n          )\n          .then((data) => {\n            sendInfoNotification(\"Request submitted!\");\n            this.props.history.push(\"/all-requests\");\n          });\n      }\n    });\n  }\n\n  render() {\n    const { foodStation, error } = this.state;\n    const foodStationChanged = this.foodStationChanged.bind(this);\n    const handleSubmit = this.handleSubmit.bind(this);\n\n    return (\n      <form onSubmit={handleSubmit}>\n        {error !== null && (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            {error}\n          </div>\n        )}\n        <div className=\"form-row\">\n          <div className=\"form-group col-md-6\">\n            <select\n              className=\"form-control\"\n              onChange={foodStationChanged}\n              id=\"foodStation\"\n              name=\"foodStation\"\n              value={foodStation}\n              required\n            >\n              <option disabled value={FoodStation.None}>\n                {\" \"}\n                -- Select GrubHub Station --{\" \"}\n              </option>\n              <option value={FoodStation.Pit}>Pit</option>\n              <option value={FoodStation.Starbucks}>Starbucks</option>\n              <option value={FoodStation.GrabNGo}>Grab N' Go</option>\n            </select>\n          </div>\n          <div className=\"form-group col-md-6\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"orderNumber\"\n              name=\"orderNumber\"\n              placeholder=\"Order Number(s)\"\n              required\n            />\n          </div>\n        </div>\n\n        <button\n          type=\"submit\"\n          id=\"submitButton\"\n          className=\"btn btn-primary float-right\"\n        >\n          Send pick-up request\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(FoodDeliveryForm);\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport TimeAgo from \"react-timeago\";\n\nfunction toLocalDelta(timestamp) {\n  const time = new Date(Date.parse(timestamp));\n  return <TimeAgo date={time} />;\n}\n\nclass RequestModal extends React.Component {\n  render() {\n    const { requestModalShow, requestModalChange, requestModalInfo } = this.props;\n    const handleHide = () => requestModalChange(false);\n\n    return (\n      <Modal show={requestModalShow} onHide={handleHide} centered>\n        <Modal.Header>\n          <h5 className=\"modal-title\" id=\"requestModalLabel\">\n            Order\n          </h5>\n        </Modal.Header>\n        <Modal.Body>\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Food Station: {requestModalInfo.request.foodStation}</li>\n            <li className=\"list-group-item\">Order Number: {requestModalInfo.request.orderNumber}</li>\n            <li className=\"list-group-item\">Request created: {toLocalDelta(requestModalInfo.request.created)}</li>\n            {requestModalInfo.request.deliverer &&\n              <li className=\"list-group-item\">Deliverer found: {toLocalDelta(requestModalInfo.request.timeDelivererFound)}</li>}\n            <li className=\"list-group-item\">Sender name: {requestModalInfo.sender.fullName}</li>\n            <li className=\"list-group-item\">Sender dorm: {requestModalInfo.sender.dormAndRoom}</li>\n            <li className=\"list-group-item\">Sender email: {requestModalInfo.sender.email}</li>\n            <li className=\"list-group-item\">Sender allergies: {requestModalInfo.sender.hasAllergy ? requestModalInfo.sender.allergies : \"None\"}</li>\n          </ul>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            onClick={requestModalChange}\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            value={false}\n          >\n            Close\n          </button>\n          <button type=\"submit\" id=\"updateButton\" className=\"btn btn-primary\" disabled>\n            Delivered!\n          </button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default RequestModal;\n","import React from \"react\";\nimport \"./RequestModal\";\nimport \"./MyHistoryPanel.css\";\nimport RequestModal from \"./RequestModal\";\nimport TimeAgo from \"react-timeago\";\n\nfunction toLocalDelta(timestamp) {\n  const time = new Date(Date.parse(timestamp));\n  return <TimeAgo date={time} />;\n}\n\nclass MyHistoryPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      myHistory: [],\n      hasMyHistoryLoaded: false,\n      requestModalShow: false,\n      requestModalInfo: {\n        request: {\n          _id: \"\",\n          schemaVersion: \"request.1\",\n          requestId: \"\",\n          sender: \"\",\n          foodStation: \"Starbucks\",\n          orderNumber: \"12312\",\n          created: \"2020-08-24T07:33:18.879Z\",\n          status: \"FoundVolunteer\",\n          deliverer: \"\",\n          timeDelivererFound: \"2020-09-12T22:17:04.503Z\"\n        },\n        sender: {\n            _id: \"\",\n            schemaVersion: \"user.1\",\n            userId: \"\",\n            fullName: \"Vlad Maksimovski\",\n            dormAndRoom: \"Gale 334\",\n            email: \"vmaksimo@u.rochester.edu\",\n            hashedPassword: \"\",\n            hasAllergy: false,\n            allergies: \"\"\n        }\n      }\n    };\n\n    this.getDeliveries = this.getDeliveries.bind(this);\n    this.requestModalChange = this.requestModalChange.bind(this);\n    this.requestChange = this.requestChange.bind(this);\n  }\n\n  requestModalChange(event) {\n    if (typeof event === \"boolean\") {\n      this.setState({\n        requestModalShow: event,\n      });\n    } else if (typeof event.target.value === \"string\") {\n      this.setState({\n        requestModalShow: event.target.value === \"true\",\n      });\n    } else {\n      throw new Error(\"Could not change request modal value.\");\n    }\n  }\n\n  requestChange(event) {\n    const historyIndex = parseInt(event.target.value);\n    this.setState({\n      requestModalInfo: this.state.myHistory[historyIndex],\n      requestModalShow: true\n    });\n  }\n\n  componentDidMount() {\n    this.getDeliveries();\n  }\n\n  async getDeliveries() {\n    const { apiUrl } = this.props;\n\n    fetch(`${apiUrl}/my-history`, {\n      credentials: \"include\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (\"message\" in data) {\n          throw new Error(data.message);\n        }\n\n        this.setState({\n          myHistory: data.history,\n          hasMyHistoryLoaded: true,\n        });\n      })\n      .catch((error) =>\n        this.setState({\n          error,\n          myHistory: [],\n          hasMyHistoryLoaded: true,\n        })\n      );\n  }\n\n  render() {\n    const { error, myHistory, hasMyHistoryLoaded, requestModalShow, requestModalInfo } = this.state;\n    const { userId } = this.props;\n    const myHistoryList = myHistory.map((historyEntry, index) => (\n      <li\n        key={historyEntry.request.requestId}\n        className={`d-flex justify-content-between align-items-center list-group-item ${\n          index !== myHistory.length - 1 ? \"mb-2\" : \"\"\n        }`}\n      >\n        <div>\n          <b>{historyEntry.request.sender === userId ?\n            \"Order at \" + historyEntry.request.foodStation :\n            \"Delivery for \" + historyEntry.request.foodStation}</b>\n          <br />\n          <br />\n          Last updated {historyEntry.request.status === \"Requested\" ?\n            toLocalDelta(historyEntry.request.created) :\n            toLocalDelta(historyEntry.request.timeDelivererFound)}\n        </div>\n        <div className=\"d-flex align-items-center\">\n          <button\n            value={index}\n            className=\"btn btn-primary\"\n            onClick={this.requestChange}\n          >\n            View\n          </button>\n        </div>\n      </li>\n    ));\n\n    return (\n      <div>\n        <div\n          id=\"load-my-history\"\n          style={hasMyHistoryLoaded ? { display: \"none\" } : {}}\n        >\n          <img src={`${process.env.PUBLIC_URL}/loading.gif`} alt=\"Loading...\" />\n        </div>\n        <div\n          id=\"error-my-history\"\n          className=\"alert alert-danger\"\n          style={error === null ? { display: \"none\" } : {}}\n        >\n          {error !== null && error.toString()}\n        </div>\n\n        <RequestModal\n          requestModalShow={requestModalShow}\n          requestModalChange={this.requestModalChange}\n          requestModalInfo={requestModalInfo}\n          />\n        <ul className=\"list-group\">\n          {myHistoryList}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default MyHistoryPanel;\n","/* @flow */\n\n// English shortened\nconst strings = {\n  prefixAgo: null,\n  prefixFromNow: null,\n  suffixAgo: \"ago\",\n  suffixFromNow: \"\",\n  seconds: \"<1 min\",\n  minute: \"1 min\",\n  minutes: \"%d mins\",\n  hour: \"1 hr\",\n  hours: \"%d hrs\",\n  day: \"1 day\",\n  days: \"%d days\",\n  month: \"1 mon\",\n  months: \"%d mon\",\n  year: \"1 yr\",\n  years: \"%d yrs\",\n  wordSeparator: \" \",\n};\n\nexport default strings;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./RequestsPanel.css\";\nimport TimeAgo from \"react-timeago\";\nimport buildFormatter from \"react-timeago/lib/formatters/buildFormatter\";\nimport englishStrings from \"./ShortStrings\";\n\nfunction toLocalDelta(timestamp) {\n  const formatter = buildFormatter(englishStrings);\n  const time = new Date(Date.parse(timestamp));\n  return <TimeAgo date={time} formatter={formatter} />;\n}\n\nclass RequestsPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      requests: [],\n      haveRequestsLoaded: false,\n    };\n\n    this.getRequests = this.getRequests.bind(this);\n  }\n\n  componentDidMount() {\n    this.getRequests();\n  }\n\n  async getRequests() {\n    const { apiUrl } = this.props;\n\n    fetch(`${apiUrl}/get-requests`, {\n      credentials: \"include\",\n    })\n      .then((response) => response.json())\n      .then((newRequests) =>\n        this.setState({ requests: newRequests, haveRequestsLoaded: true })\n      );\n  }\n\n  async handleDelivery(event) {\n    const { apiUrl, isLoggedIn, userId, sendInfoNotification } = this.props;\n\n    if (isLoggedIn !== true) {\n      this.setState({\n        error: `Error: Not logged in.`,\n      });\n      return;\n    }\n\n    const request = {\n      deliverer: userId,\n      requestId: event.target.value,\n      status: \"requested\",\n    };\n\n    fetch(`${apiUrl}/deliver-request`, {\n      method: \"POST\",\n      credentials: \"include\",\n      body: JSON.stringify(request),\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    }).then((response) => {\n      if (!response.ok) {\n        response\n          .json()\n          .then((data) => {\n            throw new Error(`Error: ${data.message}`);\n          })\n          .catch((error) =>\n            this.setState({\n              error,\n            })\n          );\n      } else {\n        response\n          .json()\n          .catch((error) =>\n            this.setState({\n              error,\n            })\n          )\n          .then((data) => {\n            sendInfoNotification(\"Delivery requested!\");\n            this.props.history.push(\"/my-deliveries\");\n          });\n      }\n    });\n  }\n\n  render() {\n    const { requests, haveRequestsLoaded } = this.state;\n    const handleDelivery = this.handleDelivery.bind(this);\n    const requestsLength = requests.length;\n    const requestsList = requests.map((req, index) => (\n      <li\n        key={req.requestId}\n        className={`d-flex justify-content-between list-group-item ${\n          index !== requestsLength - 1 ? \"mb-2\" : \"\"\n        }`}\n      >\n        <div>\n          {req.foodStation}\n          <br />\n          <br />\n          {toLocalDelta(req.created)}\n        </div>\n        <div className=\"d-flex align-items-center\">\n          <button\n            value={req.requestId}\n            onClick={handleDelivery}\n            className=\"btn btn-dark\"\n          >\n            Deliver!\n          </button>\n        </div>\n      </li>\n    ));\n\n    return (\n      <div id=\"requests\">\n        <div\n          id=\"load-requests\"\n          style={haveRequestsLoaded ? { display: \"none\" } : {}}\n        >\n          <img src={`${process.env.PUBLIC_URL}/loading.gif`} alt=\"Loading...\" />\n        </div>\n        <ul\n          id=\"requests-list\"\n          className=\"list-group\"\n          style={haveRequestsLoaded ? {} : { display: \"none\" }}\n        >\n          {requestsList}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(RequestsPanel);\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nfunction validateRequest(registerData) {\n  if (registerData.schemaVersion.trim() === \"\") {\n    return \"Schema version is empty\";\n  }\n  if (!registerData.fullName.trim().includes(\" \")) {\n    return \"Please enter full name\";\n  }\n  if (!registerData.email.includes(\"@u.rochester.edu\")) {\n    return \"Please enter valid e-mail (must contain @u.rochester.edu)\";\n  }\n  if (!registerData.password.length > 6) {\n    return \"Please enter a secure password (6 characters or above)\";\n  }\n\n  return \"\";\n}\n\nclass RegisterForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasAllergy: false,\n      error: null,\n    };\n  }\n\n  allergyChanged(event) {\n    this.setState({\n      hasAllergy: event.target.checked,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { hasAllergy } = this.state;\n    const { apiUrl, registerModalChange, onLoginChange } = this.props;\n\n    const formData = new FormData(event.target);\n\n    const schemaVersion = \"user.1\";\n    const fullName = formData.get(\"fullName\");\n    const dormAndRoom = formData.get(\"dormAndRoom\");\n    const email = formData.get(\"email\");\n    let allergies = formData.get(\"allergies\");\n    if (allergies === null) {\n      allergies = \"\";\n    }\n\n    const password = formData.get(\"password\");\n    const passwordRepeat = formData.get(\"password-repeat\");\n\n    const registerData = {\n      schemaVersion,\n      fullName,\n      dormAndRoom,\n      email,\n      password,\n      hasAllergy,\n      allergies,\n    };\n\n    const validationError =\n      password !== passwordRepeat\n        ? \"Passwords do not match\"\n        : validateRequest(registerData);\n\n    if (validationError === \"\") {\n      fetch(`${apiUrl}/auth/register`, {\n        method: \"POST\",\n        credentials: \"include\",\n        body: JSON.stringify(registerData),\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      }).then((response) =>\n        response.json().then((data) => {\n          if (response.status === 200) {\n            registerModalChange(false);\n            this.setState({\n              error: null,\n            });\n            console.log(`Logged in as ${data.userId}`);\n            onLoginChange({\n              isLoggedIn: true,\n              userId: data.userId,\n            });\n          } else {\n            this.setState({\n              error: `${response.status} Error: ${data.message}`,\n            });\n          }\n        })\n      );\n    } else {\n      this.setState({\n        error: `Error: ${validationError}.`,\n      });\n    }\n  }\n\n  render() {\n    const { hasAllergy, error } = this.state;\n    const { registerModalShow, registerModalChange } = this.props;\n    const registerModalHide = () => registerModalChange(false);\n    const allergyChanged = this.allergyChanged.bind(this);\n    const handleSubmit = this.handleSubmit.bind(this);\n\n    return (\n      <Modal show={registerModalShow} onHide={registerModalHide} centered>\n        <Modal.Header>\n          <h5 className=\"modal-title\" id=\"registerModalLabel\">\n            Register an account\n          </h5>\n        </Modal.Header>\n        <form onSubmit={handleSubmit}>\n          <Modal.Body>\n            {error !== null && (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {error}\n              </div>\n            )}\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"fullName\"\n                name=\"fullName\"\n                placeholder=\"Full Name\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"dormAndRoom\"\n                name=\"dormAndRoom\"\n                placeholder=\"Dorm and Room\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"register-email\"\n                name=\"email\"\n                placeholder=\"email@u.rochester.edu\"\n                autoComplete=\"username\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"register-password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"new-password\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"register-password-repeat\"\n                name=\"password-repeat\"\n                placeholder=\"Password (confirm)\"\n                autoComplete=\"new-password\"\n                required\n              />\n            </div>\n            <div className=\"form-group form-check\">\n              <input\n                type=\"checkbox\"\n                defaultChecked={hasAllergy}\n                onChange={allergyChanged}\n                className=\"form-check-input\"\n                id=\"exampleCheck1\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\n                Any allergies?\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"allergies\"\n                name=\"allergies\"\n                placeholder=\"Allergies\"\n                disabled={hasAllergy ? \"\" : \"disabled\"}\n                required={hasAllergy ? \"required\" : \"\"}\n              />\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <button\n              type=\"button\"\n              onClick={registerModalHide}\n              className=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n            <button\n              type=\"submit\"\n              id=\"registerButton\"\n              className=\"btn btn-primary\"\n            >\n              Register\n            </button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nfunction validateRequest(loginData) {\n  if (!loginData.email.includes(\"@u.rochester.edu\")) {\n    return \"Please enter valid e-mail (must contain @u.rochester.edu)\";\n  }\n  if (!loginData.password.length > 6) {\n    return \"Please enter a secure password (6 characters or above)\";\n  }\n\n  return \"\";\n}\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { apiUrl, onLoginChange } = this.props;\n    const loginModalChange = this.props.loginModalChange.bind(this);\n    const formData = new FormData(event.target);\n\n    const email = formData.get(\"email\");\n    const password = formData.get(\"password\");\n\n    const loginData = {\n      email,\n      password,\n    };\n\n    const validationError = validateRequest(loginData);\n\n    if (validationError === \"\") {\n      fetch(`${apiUrl}/auth/login`, {\n        method: \"POST\",\n        credentials: \"include\",\n        body: JSON.stringify(loginData),\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      }).then((response) =>\n        response.json().then((data) => {\n          if (response.status === 200) {\n            loginModalChange(false);\n            this.setState({\n              error: null,\n            });\n            console.log(`Logged in as ${data.userId}`);\n            onLoginChange({\n              isLoggedIn: true,\n              userId: data.userId,\n            });\n          } else {\n            this.setState({\n              error: `${response.status} Error: ${data.message}`,\n            });\n          }\n        })\n      );\n    } else {\n      this.setState({\n        error: `Error: ${validationError}.`,\n      });\n    }\n  }\n\n  render() {\n    const { error } = this.state;\n    const { loginModalShow, loginModalChange } = this.props;\n    const handleHide = () => loginModalChange(false);\n    const handleSubmit = this.handleSubmit.bind(this);\n\n    return (\n      <Modal show={loginModalShow} onHide={handleHide} centered>\n        <Modal.Header>\n          <h5 className=\"modal-title\" id=\"loginModalLabel\">\n            Login to your account\n          </h5>\n        </Modal.Header>\n        <form onSubmit={handleSubmit}>\n          <Modal.Body>\n            {error !== null && (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {error}\n              </div>\n            )}\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"loginEmail\"\n                name=\"email\"\n                placeholder=\"email@u.rochester.edu\"\n                autoComplete=\"username\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"loginPassword\"\n                name=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"current-password\"\n                required\n              />\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <button\n              onClick={loginModalChange}\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              value={false}\n            >\n              Close\n            </button>\n            <button type=\"submit\" id=\"loginButton\" className=\"btn btn-primary\">\n              Login\n            </button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport NavBar from \"./NavBar\";\nimport FoodDeliveryForm from \"./FoodDeliveryForm\";\nimport MyHistoryPanel from \"./MyHistoryPanel\";\nimport RequestsPanel from \"./RequestsPanel\";\nimport RegisterForm from \"./RegisterForm\";\nimport LoginForm from \"./LoginForm\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-notifications/lib/notifications.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiUrl: process.env.REACT_APP_API_URL,\n      isLoggedIn: false,\n      userId: null,\n      loginModalShow: false,\n      registerModalShow: false,\n    };\n\n    this.startSession = this.startSession.bind(this);\n  }\n\n  onLoginChange(event) {\n    if (event.isLoggedIn === true) {\n      this.sendInfoNotification(\"Logged in!\");\n    } else {\n      this.sendInfoNotification(\"Logged out.\");\n    }\n\n    this.setState({\n      isLoggedIn: event.isLoggedIn,\n      userId: event.userId,\n    });\n  }\n\n  componentDidMount() {\n    this.startSession();\n  }\n\n  sendInfoNotification(event) {\n    NotificationManager.info(event);\n  }\n\n  async startSession() {\n    const { apiUrl } = this.state;\n\n    fetch(`${apiUrl}/auth/start-session`, {\n      method: \"GET\",\n      credentials: \"include\",\n    })\n      .then((response) => {\n        return response.json().then((data) => {\n          if (response.ok) {\n            this.setState({\n              isLoggedIn: true,\n              userId: data.userId,\n            });\n          } else {\n            throw new Error(data.message);\n          }\n        });\n      })\n      .catch((error) => {\n        if (error.message !== \"Not logged in.\") {\n          this.sendInfoNotification(`${error}. Try logging in again.`);\n        }\n      });\n  }\n\n  loginModalChange(event) {\n    if (typeof event === \"boolean\") {\n      this.setState({\n        loginModalShow: event,\n      });\n    } else if (typeof event.target.value === \"string\") {\n      this.setState({\n        loginModalShow: event.target.value === \"true\",\n      });\n    } else {\n      throw new Error(\"Could not change login modal value.\");\n    }\n  }\n\n  registerModalChange(event) {\n    if (typeof event === \"boolean\") {\n      this.setState({\n        registerModalShow: event,\n      });\n    } else if (typeof event.target.value === \"string\") {\n      this.setState({\n        registerModalShow: event.target.value === \"true\",\n      });\n    } else {\n      throw new Error(\"Could not change register modal value.\");\n    }\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      userId,\n      apiUrl,\n      loginModalShow,\n      registerModalShow,\n    } = this.state;\n    const onLoginChange = this.onLoginChange.bind(this);\n    const loginModalChange = this.loginModalChange.bind(this);\n    const sendInfoNotification = this.sendInfoNotification.bind(this);\n    const registerModalChange = this.registerModalChange.bind(this);\n\n    return (\n      <div id=\"App\" className=\"container\">\n        <Router basename={process.env.PUBLIC_URL} hashType=\"noslash\">\n          <NotificationContainer />\n\n          <div id=\"navBar\">\n            <NavBar\n              apiUrl={apiUrl}\n              title=\"PitBoss\"\n              onLoginChange={onLoginChange}\n              isLoggedIn={isLoggedIn}\n              loginModalChange={loginModalChange}\n              registerModalChange={registerModalChange}\n            />\n          </div>\n\n          <RegisterForm\n            apiUrl={apiUrl}\n            onLoginChange={onLoginChange}\n            registerModalShow={registerModalShow}\n            registerModalChange={registerModalChange}\n          />\n          <LoginForm\n            apiUrl={apiUrl}\n            onLoginChange={onLoginChange}\n            loginModalShow={loginModalShow}\n            loginModalChange={loginModalChange}\n          />\n\n          <Switch>\n            <Route exact path=\"/\">\n              <RequestsPanel\n                apiUrl={apiUrl}\n                isLoggedIn={isLoggedIn}\n                sendInfoNotification={sendInfoNotification}\n                userId={userId}\n              />\n            </Route>\n            <Route\n              exact\n              path=\"/all-requests\"\n              render={() => (\n                <RequestsPanel\n                  apiUrl={apiUrl}\n                  isLoggedIn={isLoggedIn}\n                  sendInfoNotification={sendInfoNotification}\n                  userId={userId}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/ask-for-delivery\"\n              render={() => (\n                <div id=\"deliveryForm\">\n                  <FoodDeliveryForm\n                    apiUrl={apiUrl}\n                    isLoggedIn={isLoggedIn}\n                    userId={userId}\n                    sendInfoNotification={sendInfoNotification}\n                  />\n                </div>\n              )}\n            />\n            <Route\n              exact\n              path=\"/my-deliveries\"\n              render={() => (\n                <div id=\"myHistoryPanel\">\n                  <MyHistoryPanel apiUrl={apiUrl}\n                                  userId={userId} />\n                </div>\n              )}\n            />\n            <Route\n              render={() => (\n                <div id=\"error\">\n                  <h4 className=\"alert alert-danger mb-0\" role=\"alert\">\n                    404 error: Page not found.\n                  </h4>\n                </div>\n              )}\n            />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}