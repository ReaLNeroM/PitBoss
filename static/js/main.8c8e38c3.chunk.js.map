{"version":3,"sources":["NavBar.js","FoodStation.js","FoodDeliveryForm.js","MyDeliveriesPanel.js","RequestsPanel.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","title","description","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Nav","Link","as","to","aria-haspopup","aria-labelledby","FoodStation","None","Pit","Starbucks","GrabNGo","FoodDeliveryForm","state","fullName","dormAndRoom","foodStation","orderNumber","event","this","setState","target","value","fullNameChanged","bind","dormAndRoomChanged","foodStationChanged","orderNumberChanged","onChange","name","placeholder","disabled","React","Component","MyDeliveriesPanel","error","apiUrl","myDeliveries","haveMyDeliveriesLoaded","getDeliveries","axios","get","then","response","data","newMyDeliveries","catch","myDeliveriesList","map","req","key","_id","style","marginRight","time","display","src","alt","RequestsPanel","requests","haveRequestsLoaded","getRequests","newRequests","requestsList","App","basename","process","hashType","path","render","REACT_APP_API_URL","exact","myDeliveriesLoaded","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.8c8e38c3.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport { Link } from 'react-router-dom'\n\nconst NavBar = (props) => {\n    const {title, description} = props;\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark primary-color\">\n          <a className=\"navbar-brand\" href=\"all-requests\">PitBoss</a>\n\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n            aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item active\">\n                <Nav.Link className=\"nav-link\" as={Link} to=\"all-requests\">Deliver!\n                  <span className=\"sr-only\">(current)</span>\n                </Nav.Link>\n              </li>\n              <li className=\"nav-item\">\n                <Nav.Link className=\"nav-link\" as={Link} to=\"ask-for-delivery\">\n                    Ask for delivery\n               </Nav.Link>\n              </li>\n              <li className=\"nav-item\">\n                <Nav.Link className=\"nav-link\" as={Link} to=\"my-deliveries\">\n                    My deliveries\n                </Nav.Link>\n              </li>\n            </ul>\n\n            <ul className=\"navbar-nav mr-auto mr-sm-2\">\n              <li className=\"nav-item dropdown\">\n                <a className=\"nav-link dropdown-toggle waves-effect waves-light\" id=\"navbarDropdownMenuLink-4\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                  <i className=\"fas fa-user\"></i> Profile </a>\n                <div className=\"dropdown-menu dropdown-menu-right dropdown-info\" aria-labelledby=\"navbarDropdownMenuLink-4\">\n                  <a className=\"dropdown-item waves-effect waves-light\" href=\"#\">My account</a>\n                  <a className=\"dropdown-item waves-effect waves-light\" href=\"#\">Log out</a>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </nav>\n    )\n}\n\nexport default NavBar;","const FoodStation = {\n    None: \"N/A\",\n    Pit: \"Pit\",\n    Starbucks: \"Starbucks\",\n    GrabNGo: \"Grab N' Go\"\n}\n\nexport default FoodStation;","import React from 'react';\nimport FoodStation from './FoodStation';\n\nclass FoodDeliveryForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fullName: '',\n            dormAndRoom: '',\n            foodStation: FoodStation.None,\n            orderNumber: ''\n        };\n    }\n\n    fullNameChanged(event) {\n        this.setState({\n            fullName: event.target.value\n        });\n    }\n    dormAndRoomChanged(event) {\n        this.setState({\n            dormAndRoom: event.target.value\n        });\n    }\n    foodStationChanged(event) {\n        this.setState({\n            foodStation: event.target.value\n        })\n    }\n    orderNumberChanged(event) {\n        this.setState({\n            orderNumber: event.target.value\n        });\n    }\n\n    render() {\n        const { fullName, dormAndRoom, foodStation, orderNumber} = this.state;\n        const fullNameChanged = this.fullNameChanged.bind(this);\n        const dormAndRoomChanged = this.dormAndRoomChanged.bind(this);\n        const foodStationChanged = this.foodStationChanged.bind(this);\n        const orderNumberChanged = this.orderNumberChanged.bind(this);\n\n        return (\n\n            <form>\n                <div className=\"form-group\">\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           onChange={fullNameChanged}\n                           id=\"fullName\"\n                           name=\"fullName\"\n                           placeholder=\"Full Name\"\n                           value={fullName} />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           onChange={dormAndRoomChanged}\n                           id=\"dormAndRoom\"\n                           name=\"dormAndRoom\"\n                           placeholder=\"Dorm and Room\"\n                           value={dormAndRoom} />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           onChange={dormAndRoomChanged}\n                           id=\"dormAndRoom\"\n                           name=\"dormAndRoom\"\n                           placeholder=\"email@u.rochester.edu\"\n                           value={dormAndRoom} />\n                </div>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                        <select className=\"form-control\"\n                                onChange={foodStationChanged}\n                                id=\"foodStation\"\n                                name=\"foodStation\"\n                                value={foodStation}>\n                            <option disabled value={FoodStation.None}> GrubHub Station </option>\n                            <option value={FoodStation.Pit}>Pit</option>\n                            <option value={FoodStation.Starbucks}>Starbucks</option>\n                            <option value={FoodStation.GrabNGo}>Grab N' Go</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               onChange={orderNumberChanged}\n                               id=\"orderNumber\"\n                               name=\"orderNumber\"\n                               placeholder=\"Order Number(s)\"\n                               value={orderNumber} />\n                    </div>\n                </div>\n\n                <button type=\"submit\"\n                        id=\"submitButton\"\n                        className=\"btn btn-primary float-right\">Send pick-up request</button>\n            </form>\n        );\n    }\n}\n\nexport default FoodDeliveryForm;\n","import React from 'react';\nimport axios from \"axios\";\nimport './MyDeliveriesPanel.css';\n\nclass MyDeliveriesPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            apiUrl: props.apiUrl,\n            myDeliveries: [],\n            haveMyDeliveriesLoaded: false\n        };\n\n        this.getDeliveries = this.getDeliveries.bind(this);\n    }\n\n    componentDidMount() {\n        this.getDeliveries();\n    }\n\n    async getDeliveries() {\n        axios.get(`${this.state.apiUrl}/my_deliveries`)\n            .then(response => response.data)\n            .then(newMyDeliveries =>\n                this.setState({myDeliveries: newMyDeliveries,\n                               haveMyDeliveriesLoaded: true}))\n            .catch(error => this.setState({error: error, haveMyDeliveriesLoaded: true}));\n    }\n\n    render() {\n        const { error, myDeliveries, haveMyDeliveriesLoaded } = this.state;\n        const myDeliveriesList = myDeliveries.map((req) => (\n            <li key={req._id} className=\"list-group-item d-flex justify-content-between align-items-center mb-2\">\n               {req.foodStation}\n                <div className=\"d-flex align-items-center float-right\">\n                    <div style={{marginRight: \"1rem\"}}>\n                        {req.time}\n                    </div>\n                </div>\n            </li>\n        ));\n\n        return (\n            <div id=\"my-deliveries\">\n                <div id=\"load-my-deliveries\"\n                     style={haveMyDeliveriesLoaded ? {display: 'none'} : {}}>\n                    <img src={process.env.PUBLIC_URL + \"/loading.gif\"} alt=\"Loading...\" />\n                </div>\n                <div id=\"error-my-deliveries\"\n                     className=\"alert alert-danger\"\n                     style={error === null ? {display: 'none'}: {}}>\n                     An error has occured. Please try again.\n                </div>\n                <ul id=\"deliveries-list\"\n                    className=\"list-group\"\n                    style={haveMyDeliveriesLoaded ? {} : {display: 'none'}}>\n                    {myDeliveriesList}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default MyDeliveriesPanel;\n","import React from 'react';\nimport './RequestsPanel.css';\nimport axios from \"axios\";\n\nfunction toLocalDelta(timestamp) {\n    return '15 minutes ago';\n}\n\nclass RequestsPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            requests: [],\n            haveRequestsLoaded: false\n        };\n\n        this.getRequests = this.getRequests.bind(this);\n    }\n\n    componentDidMount() {\n        this.getRequests();\n    }\n\n    async getRequests() {\n        axios.get(`${this.state.apiUrl}/requests`)\n            .then(response => response.data)\n            .then(newRequests => this.setState({requests: newRequests, haveRequestsLoaded: true}));\n    }\n\n    render() {\n        const { requests, haveRequestsLoaded } = this.state;\n        const requestsList = requests.map((req) => (\n            <li key={req._id} className=\"list-group-item d-flex justify-content-between align-items-center mb-2\">\n               {req.foodStation}\n                <div className=\"d-flex align-items-center float-right\">\n                    <div style={{marginRight: \"1rem\"}}>\n                        {toLocalDelta(req.time)}\n                    </div>\n                    <button className=\"float-right btn btn-dark\">\n                        Deliver!\n                    </button>\n                </div>\n            </li>\n        ));\n\n        return (\n            <div id=\"requests\">\n                <div id=\"load-requests\"\n                     style={haveRequestsLoaded ? {display: 'none'} : {}}>\n                    <img src={process.env.PUBLIC_URL + \"/loading.gif\"} alt=\"Loading...\" />\n                </div>\n                <ul id=\"requests-list\"\n                    className=\"list-group\"\n                    style={haveRequestsLoaded ? {} : {display: 'none'}}>\n                    {requestsList}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default RequestsPanel;\n","import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport FoodDeliveryForm from './FoodDeliveryForm';\nimport MyDeliveriesPanel from './MyDeliveriesPanel';\nimport RequestsPanel from './RequestsPanel';\nimport FoodStation from './FoodStation';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            requests: [],\n            haveRequestsLoaded: false,\n            haveMyDeliveriesLoaded: false,\n            fullName: '',\n            dormAndRoom: '',\n            foodStation: FoodStation.None,\n            orderNumber: ''\n        };\n    }\n\n    render() {\n      return (\n        <div id=\"App\" className=\"container\">\n            <Router basename={process.env.PUBLIC_URL}\n                    hashType=\"noslash\">\n                <div id=\"navBar\">\n                    <NavBar\n                        title=\"PitBoss\"\n                        description=\"Help out and deliver food for students in quarantine! (UR only)\" />\n                </div>\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        render={() =>\n                                <RequestsPanel\n                                    apiUrl={process.env.REACT_APP_API_URL} />}\n                            exact />\n                    <Route\n                        path=\"/all-requests\"\n                        render={() =>\n                                <RequestsPanel\n                                    apiUrl={process.env.REACT_APP_API_URL} />}\n                            exact />\n                    <Route\n                        path=\"/ask-for-delivery\"\n                        render={() =>\n                            <div id=\"deliveryForm\">\n                                <FoodDeliveryForm />\n                            </div>}\n                        exact />\n                    <Route\n                        path=\"/my-deliveries\"\n                        render={() =>\n                            <div id=\"myDeliveriesPanel\">\n                                <MyDeliveriesPanel\n                                    haveMyDeliveriesLoaded={this.state.myDeliveriesLoaded} />\n                            </div>}\n                        exact />\n                </Switch>\n            </Router>\n        </div>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}