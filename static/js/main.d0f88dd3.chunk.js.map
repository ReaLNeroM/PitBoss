{"version":3,"sources":["NavBar.js","FoodStation.js","FoodDeliveryForm.js","MyDeliveriesPanel.js","ShortStrings.js","RequestsPanel.js","RegisterForm.js","LoginForm.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","console","log","state","title","isLoggedIn","nextProps","newTitle","newIsLoggedin","this","setState","tab","location","pathname","slice","className","as","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Nav","href","aria-haspopup","aria-labelledby","React","Component","withRouter","FoodStation","None","Pit","Starbucks","GrabNGo","FoodDeliveryForm","apiUrl","fullName","dormAndRoom","email","foodStation","orderNumber","event","target","value","preventDefault","formData","FormData","request","schemaVersion","get","validationError","trim","includes","validateRequest","fetch","method","body","JSON","stringify","headers","then","history","push","alert","fullNameChanged","bind","dormAndRoomChanged","emailChanged","foodStationChanged","orderNumberChanged","handleSubmit","onSubmit","onChange","name","placeholder","required","disabled","MyDeliveriesPanel","error","myDeliveries","haveMyDeliveriesLoaded","getDeliveries","axios","response","data","newMyDeliveries","catch","myDeliveriesList","map","req","key","_id","style","marginRight","time","display","src","process","alt","strings","prefixAgo","prefixFromNow","suffixAgo","suffixFromNow","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","wordSeparator","RequestsPanel","requests","haveRequestsLoaded","getRequests","newRequests","requestsLength","length","requestsList","index","timestamp","formatter","buildFormatter","englishStrings","Date","parse","date","toLocalDelta","created","RegisterForm","hasAllergy","checked","allergies","password","registerData","allergyChanged","tabIndex","role","aria-hidden","data-dismiss","defaultChecked","htmlFor","Login","loginData","json","status","userId","onLoginChange","message","App","basename","hashType","LoginForm","exact","path","render","class","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0f88dd3.chunk.js","sourcesContent":["import React from 'react';\nimport Nav from 'react-bootstrap/Nav'\nimport { Link, withRouter } from 'react-router-dom'\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props);\n        this.state = {\n            title: props.title,\n            isLoggedIn: props.isLoggedIn\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { title: newTitle, isLoggedIn: newIsLoggedin } = nextProps;\n        const { title, isLoggedIn } = this.props;\n    \n        if (title !== newTitle || isLoggedIn !== newIsLoggedin) {\n            this.setState({ title: newTitle, isLoggedIn: newIsLoggedin });\n        }\n    }\n    \n    render() {\n        const { title, isLoggedIn } = this.state;\n        const { location } = this.props;\n        const tab = location.pathname.slice(1);\n\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark primary-color\">\n                <Link as={Link} className=\"navbar-brand\" to=\"all-requests\">{title}</Link>\n\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n                    aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className={\"nav-item \" + ((tab === \"all-requests\" || tab === \"\") ? \"active\" : \"\")}>\n                            <Nav.Link className=\"nav-link\" as={Link} href=\"all-requests\" to=\"all-requests\">\n                                Deliver!\n                            </Nav.Link>\n                        </li>\n                        <li className={\"nav-item \" + (tab === \"ask-for-delivery\" ? \"active\" : \"\")}>\n                            <Nav.Link className=\"nav-link\" as={Link} href=\"ask-for-delivery\" to=\"ask-for-delivery\">\n                                Ask for delivery\n                            </Nav.Link>\n                        </li>\n                        <li className={\"nav-item \" + (tab === \"my-deliveries\" ? \"active\" : \"\")}>\n                            <Nav.Link className=\"nav-link\" as={Link} href=\"my-deliveries\" to=\"my-deliveries\">\n                                My deliveries\n                            </Nav.Link>\n                        </li>\n                    </ul>\n\n                    <ul className=\"navbar-nav mr-auto mr-sm-2\">\n                        <li className=\"nav-item dropdown\">\n                            <div\n                                className=\"nav-link dropdown-toggle waves-effect waves-light\"\n                                id=\"navbarDropdownMenuLink-4\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                href=\"#\"\n                                aria-expanded=\"true\">\n                                <i className=\"fas fa-user\" />\n                                Profile\n                            </div>\n                            <div\n                                className=\"dropdown-menu dropdown-menu-right dropdown-info\"\n                                aria-labelledby=\"navbarDropdownMenuLink-4\">\n                                {isLoggedIn === false && \n                                    <div>\n                                        <div className=\"dropdown-item waves-effect waves-light\" data-toggle=\"modal\" data-target=\"#registerModal\">\n                                            Register\n                                        </div>\n                                        <div className=\"dropdown-item waves-effect waves-light\" data-toggle=\"modal\" data-target=\"#loginModal\">\n                                            Login\n                                        </div>\n                                    </div>}\n                                {isLoggedIn === true && \n                                    <div>\n                                        <div className=\"dropdown-item waves-effect waves-light\" data-toggle=\"modal\" data-target=\"#myProfileModal\">\n                                            My profile\n                                        </div>\n                                        <div className=\"dropdown-item waves-effect waves-light\" data-toggle=\"modal\" data-target=\"#logoutModal\">\n                                            Logout\n                                        </div>\n                                    </div>}\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(NavBar);","const FoodStation = {\n    None: \"\", // Empty string isn't ideal, but required for correct <select required> behavior.\n    Pit: \"Pit\",\n    Starbucks: \"Starbucks\",\n    GrabNGo: \"Grab N' Go\"\n}\n\nexport default FoodStation;","import React from 'react';\nimport FoodStation from './FoodStation';\nimport { withRouter } from 'react-router-dom';\n\nfunction validateRequest(request){\n    if(request.schemaVersion.trim() === ''){\n        return \"Schema version is empty\";\n    } else if(!request.fullName.trim().includes(' ')){\n        return \"Please enter full name\";\n    } else if(!request.email.includes(\"@u.rochester.edu\")){\n        return \"Please enter valid e-mail (must contain @u.rochester.edu)\";\n    }\n\n    return \"\";\n}\n\nclass FoodDeliveryForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            fullName: '',\n            dormAndRoom: '',\n            email: '',\n            foodStation: FoodStation.None,\n            orderNumber: ''\n        };\n    }\n\n    fullNameChanged(event) {\n        this.setState({\n            fullName: event.target.value\n        });\n    }\n    dormAndRoomChanged(event) {\n        this.setState({\n            dormAndRoom: event.target.value\n        });\n    }\n    emailChanged(event) {\n        this.setState({\n            email: event.target.value\n        });\n    }\n    foodStationChanged(event) {\n        this.setState({\n            foodStation: event.target.value\n        })\n    }\n    orderNumberChanged(event) {\n        this.setState({\n            orderNumber: event.target.value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const formData = new FormData(event.target);\n\n        const schemaVersion = \"request.1\";\n        const fullName = formData.get(\"fullName\");\n        const dormAndRoom = formData.get(\"dormAndRoom\");\n        const email = formData.get(\"email\");\n        const foodStation = this.state.foodStation; // hack because select's default\n                                                    // value doesn't always work.\n        const orderNumber = formData.get(\"orderNumber\");\n\n        const request = {\n            schemaVersion,\n            fullName,\n            dormAndRoom,\n            email,\n            foodStation,\n            orderNumber\n        };\n        const validationError = validateRequest(request);\n\n        if(validationError === ''){\n            fetch(`${this.state.apiUrl}/create_request`, {\n                method: 'POST',\n                body: JSON.stringify(request),\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }).then(this.props.history.push('/all-requests'));\n        } else {\n            alert(`Error: ${validationError}.`);\n        }\n    }\n\n    render() {\n        const { fullName, dormAndRoom, email, foodStation, orderNumber} = this.state;\n        const fullNameChanged = this.fullNameChanged.bind(this);\n        const dormAndRoomChanged = this.dormAndRoomChanged.bind(this);\n        const emailChanged = this.emailChanged.bind(this);\n        const foodStationChanged = this.foodStationChanged.bind(this);\n        const orderNumberChanged = this.orderNumberChanged.bind(this);\n        const handleSubmit = this.handleSubmit.bind(this)\n\n        return (\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           onChange={fullNameChanged}\n                           id=\"fullName\"\n                           name=\"fullName\"\n                           placeholder=\"Full Name\"\n                           value={fullName}\n                           required />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           onChange={dormAndRoomChanged}\n                           id=\"dormAndRoom\"\n                           name=\"dormAndRoom\"\n                           placeholder=\"Dorm and Room\"\n                           value={dormAndRoom}\n                           required />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\"\n                           className=\"form-control\"\n                           onChange={emailChanged}\n                           id=\"email\"\n                           name=\"email\"\n                           placeholder=\"email@u.rochester.edu\"\n                           value={email}\n                           required />\n                </div>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                        <select className=\"form-control\"\n                                onChange={foodStationChanged}\n                                id=\"foodStation\"\n                                name=\"foodStation\"\n                                value={foodStation}\n                                required >\n                            <option disabled value={FoodStation.None}> -- Please select GrubHub Station -- </option>\n                            <option value={FoodStation.Pit}>Pit</option>\n                            <option value={FoodStation.Starbucks}>Starbucks</option>\n                            <option value={FoodStation.GrabNGo}>Grab N' Go</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               onChange={orderNumberChanged}\n                               id=\"orderNumber\"\n                               name=\"orderNumber\"\n                               placeholder=\"Order Number(s)\"\n                               value={orderNumber}\n                               required />\n                    </div>\n                </div>\n\n                <button type=\"submit\"\n                        id=\"submitButton\"\n                        className=\"btn btn-primary float-right\">Send pick-up request</button>\n            </form>\n        );\n    }\n}\n\nexport default withRouter(FoodDeliveryForm);\n","import React from 'react';\nimport axios from \"axios\";\nimport './MyDeliveriesPanel.css';\n\nclass MyDeliveriesPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            apiUrl: props.apiUrl,\n            myDeliveries: [],\n            haveMyDeliveriesLoaded: false\n        };\n\n        this.getDeliveries = this.getDeliveries.bind(this);\n    }\n\n    componentDidMount() {\n        this.getDeliveries();\n    }\n\n    async getDeliveries() {\n        axios.get(`${this.state.apiUrl}/my_deliveries`)\n            .then(response => response.data)\n            .then(newMyDeliveries =>\n                this.setState({myDeliveries: newMyDeliveries,\n                               haveMyDeliveriesLoaded: true}))\n            .catch(error => this.setState({error: error, haveMyDeliveriesLoaded: true}));\n    }\n\n    render() {\n        const { error, myDeliveries, haveMyDeliveriesLoaded } = this.state;\n        const myDeliveriesList = myDeliveries.map((req) => (\n            <li key={req._id} className=\"list-group-item d-flex justify-content-between align-items-center mb-2\">\n               {req.foodStation}\n                <div className=\"d-flex align-items-center float-right\">\n                    <div style={{marginRight: \"1rem\"}}>\n                        {req.time}\n                    </div>\n                </div>\n            </li>\n        ));\n\n        return (\n            <div id=\"my-deliveries\">\n                <div id=\"load-my-deliveries\"\n                     style={haveMyDeliveriesLoaded ? {display: 'none'} : {}}>\n                    <img src={process.env.PUBLIC_URL + \"/loading.gif\"} alt=\"Loading...\" />\n                </div>\n                <div id=\"error-my-deliveries\"\n                     className=\"alert alert-info\"\n                     style={error === null ? {display: 'none'}: {}}>\n                     This tab hasn't been implemented yet, please wait ;)\n                </div>\n                <ul id=\"deliveries-list\"\n                    className=\"list-group\"\n                    style={haveMyDeliveriesLoaded ? {} : {display: 'none'}}>\n                    {myDeliveriesList}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default MyDeliveriesPanel;\n","/* @flow */\n\n// English shortened\nconst strings = {\n  prefixAgo: null,\n  prefixFromNow: null,\n  suffixAgo: 'ago',\n  suffixFromNow: '',\n  seconds: '<1 min',\n  minute: '1 min',\n  minutes: '%d mins',\n  hour: '1 hr',\n  hours: '%d hrs',\n  day: '1 day',\n  days: '%d days',\n  month: '1 mon',\n  months: '%d mon',\n  year: '1 yr',\n  years: '%d yrs',\n  wordSeparator: ' ',\n}\n\nexport default strings\n","import React from 'react';\nimport './RequestsPanel.css';\nimport axios from \"axios\";\nimport TimeAgo from 'react-timeago';\nimport englishStrings from './ShortStrings';\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter';\n\nfunction toLocalDelta(timestamp) {\n    const formatter = buildFormatter(englishStrings);\n    const time = new Date(Date.parse(timestamp));\n    return <TimeAgo date={time} formatter={formatter} />;\n}\n\nclass RequestsPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            requests: [],\n            haveRequestsLoaded: false\n        };\n\n        this.getRequests = this.getRequests.bind(this);\n    }\n\n    componentDidMount() {\n        this.getRequests();\n    }\n\n    async getRequests() {\n        axios.get(`${this.state.apiUrl}/requests`)\n            .then(response => response.data)\n            .then(newRequests => this.setState({requests: newRequests, haveRequestsLoaded: true}));\n    }\n\n    render() {\n        const { requests, haveRequestsLoaded } = this.state;\n        const requestsLength = requests.length;\n        const requestsList = requests.map((req, index) => (\n            <li\n                key={req._id}\n                className={\"list-group-item d-flex justify-content-between align-items-center \" + ((index !== requestsLength - 1) ? \"mb-2\" : \"\")}>\n               {req.foodStation}\n                <div className=\"d-flex align-items-center float-right\">\n                    <div style={{marginRight: \".50rem\"}}>\n                        {toLocalDelta(req.created)}\n                    </div>\n                    <button className=\"float-right btn btn-dark\">\n                        Deliver!\n                    </button>\n                </div>\n            </li>\n        ));\n\n        return (\n            <div id=\"requests\">\n                <div id=\"load-requests\"\n                     style={haveRequestsLoaded ? {display: 'none'} : {}}>\n                    <img src={process.env.PUBLIC_URL + \"/loading.gif\"} alt=\"Loading...\" />\n                </div>\n                <ul id=\"requests-list\"\n                    className=\"list-group\"\n                    style={haveRequestsLoaded ? {} : {display: 'none'}}>\n                    {requestsList}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default RequestsPanel;\n","import React from 'react';\n\nfunction validateRequest(registerData){\n    if(registerData.schemaVersion.trim() === ''){\n        return 'Schema version is empty';\n    } else if(!registerData.fullName.trim().includes(' ')){\n        return 'Please enter full name';\n    } else if(!registerData.email.includes('@u.rochester.edu')){\n        return 'Please enter valid e-mail (must contain @u.rochester.edu)';\n    } else if(!registerData.password.length > 6){\n        return 'Please enter a secure password (6 characters or above)'\n    }\n\n    return '';\n}\n\nclass RegisterForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            hasAllergy: false\n        };\n    }\n\n    allergyChanged(event) {\n        this.setState({\n            hasAllergy: event.target.checked\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const formData = new FormData(event.target);\n\n        const schemaVersion = 'user.1';\n        const fullName = formData.get('fullName');\n        const dormAndRoom = formData.get('dormAndRoom');\n        const email = formData.get('email');\n        const hasAllergy = this.state.hasAllergy;\n        var allergies = formData.get('allergies');\n        if (allergies === null){\n            allergies = \"\";\n        }\n\n        const password = formData.get('password');\n        const passwordRepeat = formData.get('password-repeat');\n\n        const registerData = {\n            schemaVersion,\n            fullName,\n            dormAndRoom,\n            email,\n            password,\n            hasAllergy,\n            allergies\n        };\n\n        const validationError =\n            (password !== passwordRepeat) ?\n                \"Passwords do not match\" :\n                validateRequest(registerData);\n\n        if(validationError === ''){\n            fetch(`${this.state.apiUrl}/auth/register`, {\n                method: 'POST',\n                body: JSON.stringify(registerData),\n                headers: {\n                    'content-type': 'application/json'\n                }\n            });\n        } else {\n            alert(`Error: ${validationError}.`);\n        }\n    }\n\n    render() {\n        const { hasAllergy } = this.state;\n        const allergyChanged = this.allergyChanged.bind(this);\n        const handleSubmit = this.handleSubmit.bind(this);\n\n        return (\n            <div className=\"modal fade\" id=\"registerModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"registerModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"registerModalLabel\">Register an account</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"modal-body\">\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"fullName\"\n                                    name=\"fullName\"\n                                    placeholder=\"Full Name\"\n                                    required />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"dormAndRoom\"\n                                    name=\"dormAndRoom\"\n                                    placeholder=\"Dorm and Room\"\n                                    required />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"email\"\n                                    className=\"form-control\"\n                                    id=\"register-email\"\n                                    name=\"email\"\n                                    placeholder=\"email@u.rochester.edu\"\n                                    required />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\"\n                                    className=\"form-control\"\n                                    id=\"register-password\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    required />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\"\n                                    className=\"form-control\"\n                                    id=\"register-password-repeat\"\n                                    name=\"password-repeat\"\n                                    placeholder=\"Password (confirm)\"\n                                    required />\n                                </div>\n                                <div className=\"form-group form-check\">\n                                    <input\n                                        type=\"checkbox\"\n                                        defaultChecked={hasAllergy}\n                                        onChange={allergyChanged}\n                                        className=\"form-check-input\"\n                                        id=\"exampleCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Any allergies?</label>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"allergies\"\n                                        name=\"allergies\"\n                                        placeholder=\"Allergies\"\n                                        disabled={this.state.hasAllergy ? \"\" : \"disabled\"}\n                                        required={this.state.hasAllergy ? \"required\" : \"\"} />\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-secondary\"\n                                    data-dismiss=\"modal\">\n                                    Close\n                                </button>\n                                <button\n                                    type=\"submit\"\n                                    id=\"registerButton\"\n                                    className=\"btn btn-primary\">\n                                    Register\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RegisterForm;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction validateRequest(loginData){\n    if(!loginData.email.includes('@u.rochester.edu')){\n        return 'Please enter valid e-mail (must contain @u.rochester.edu)';\n    } else if(!loginData.password.length > 6){\n        return 'Please enter a secure password (6 characters or above)'\n    }\n\n    return '';\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            error: null\n        };\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const formData = new FormData(event.target);\n\n        const email = formData.get('email');\n        const password = formData.get('password');\n\n        const loginData = {\n            email,\n            password\n        };\n\n        const validationError = validateRequest(loginData);\n\n        if(validationError === ''){\n            fetch(`${this.state.apiUrl}/auth/login`, {\n                method: 'POST',\n                body: JSON.stringify(loginData),\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }).then(response => {\n                response.json()\n                    .then(data => {\n                        if(response.status === 200){\n                            this.setState({error: null});\n                            console.log(`Logged in as ${data.userId}`);\n                            this.props.onLoginChange({\n                                isLoggedIn: true,\n                                userId: data.userId\n                            });\n                        } else {\n                            this.setState({error: `${response.status} Error: ${data.message}`});\n                        }\n                    })\n            });\n        } else {\n            alert(`Error: ${validationError}.`);\n        }\n    }\n\n    render() {\n        const error = this.state.error;\n        const handleSubmit = this.handleSubmit.bind(this);\n\n        return (\n            <div className=\"modal fade\" id=\"loginModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"loginModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"loginModalLabel\">Login to your account</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        {error !== null && \n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {error}\n                            </div>}\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"modal-body\">\n                                <div className=\"form-group\">\n                                    <input type=\"email\"\n                                    className=\"form-control\"\n                                    id=\"loginEmail\"\n                                    name=\"email\"\n                                    placeholder=\"email@u.rochester.edu\"\n                                    required />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\"\n                                    className=\"form-control\"\n                                    id=\"loginPassword\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    required />\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-secondary\"\n                                    data-dismiss=\"modal\">\n                                    Close\n                                </button>\n                                <button\n                                    type=\"submit\"\n                                    id=\"loginButton\"\n                                    className=\"btn btn-primary\">\n                                    Login\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login);","import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport FoodDeliveryForm from './FoodDeliveryForm';\nimport MyDeliveriesPanel from './MyDeliveriesPanel';\nimport RequestsPanel from './RequestsPanel';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoggedIn: false,\n            userId: null\n        };\n    }\n\n    onLoginChange(event){\n        this.setState({\n            isLoggedIn: event.isLoggedIn,\n            userId: event.userId\n        });\n        console.log(event);\n    }\n\n    render() {\n      const { isLoggedIn, userId } = this.state;\n      const apiUrl = process.env.REACT_APP_API_URL;\n      const onLoginChange = this.onLoginChange.bind(this);\n      console.log(`App: ${isLoggedIn}`);\n      \n      return (\n        <div id=\"App\" className=\"container\">\n            <Router basename={process.env.PUBLIC_URL}\n                    hashType=\"noslash\">\n                <div id=\"navBar\">\n                    <NavBar\n                        title=\"PitBoss\"\n                        isLoggedIn={isLoggedIn} />\n                </div>\n                <RegisterForm\n                    apiUrl={apiUrl}\n                    onLoginChange={onLoginChange} />\n                <LoginForm\n                    apiUrl={apiUrl}\n                    onLoginChange={onLoginChange} />\n                <Switch>\n                    <Route exact path=\"/\" >\n                        <RequestsPanel\n                            apiUrl={apiUrl} />\n                    </Route>\n                    <Route \n                        exact path=\"/all-requests\"\n                        render={() =>\n                                <RequestsPanel\n                                    apiUrl={apiUrl} />} />\n                    <Route \n                        exact path=\"/ask-for-delivery\"\n                        render={() =>\n                            <div id=\"deliveryForm\">\n                                <FoodDeliveryForm\n                                    apiUrl={apiUrl} />\n                            </div>} />\n                    <Route\n                        exact path=\"/my-deliveries\"\n                        render={() =>\n                            <div id=\"myDeliveriesPanel\">\n                                <MyDeliveriesPanel />\n                            </div>} />\n                    <Route\n                        render={() => \n                            <div id=\"error\">\n                                <h4 class=\"alert alert-danger mb-0\" role=\"alert\">\n                                    404 error: Page not found.\n                                </h4>\n                            </div>} />\n                </Switch>\n            </Router>\n        </div>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}