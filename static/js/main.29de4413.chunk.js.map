{"version":3,"sources":["NavBar.js","FoodStation.js","FoodDeliveryForm.js","MyDeliveriesPanel.js","RequestsPanel.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","title","description","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","className","FoodStation","None","Pit","Starbucks","GrabNGo","FoodDeliveryForm","onFullNameChange","fullName","onDormAndRoomChange","dormAndRoom","onFoodStationChange","foodStation","onOrderNumberChange","orderNumber","htmlFor","type","onChange","name","placeholder","value","disabled","MyDeliveriesPanel","state","error","apiUrl","myDeliveries","haveMyDeliveriesLoaded","getDeliveries","bind","this","axios","get","then","response","data","newMyDeliveries","setState","catch","myDeliveriesList","map","req","key","_id","style","marginRight","time","display","src","alt","React","Component","RequestsPanel","requests","haveRequestsLoaded","getRequests","newRequests","requestsList","App","event","target","basename","process","hashType","path","render","API_URL","exact","fullNameChanged","dormAndRoomChanged","foodStationChanged","orderNumberChanged","myDeliveriesLoaded","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.29de4413.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport { Link } from 'react-router-dom'\n\nconst NavBar = (props) => {\n    const {title, description} = props;\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand as={Link} to=\"all-requests\">{title}</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to=\"all-requests\">Deliver!</Nav.Link>\n              <Nav.Link as={Link} to=\"ask-for-delivery\">Ask for delivery!</Nav.Link>\n              <Nav.Link as={Link} to=\"my-deliveries\">My deliveries</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n          <div className=\"navbar-text\">\n            {description}\n          </div>\n        </Navbar>\n    )\n}\n\nexport default NavBar;","const FoodStation = {\n    None: \"N/A\",\n    Pit: \"Pit\",\n    Starbucks: \"Starbucks\",\n    GrabNGo: \"Grab N' Go\"\n}\n\nexport default FoodStation;","import React from 'react';\nimport FoodStation from './FoodStation';\n\nconst FoodDeliveryForm = (props) => {\n    const {\n        onFullNameChange, fullName,\n        onDormAndRoomChange, dormAndRoom,\n        onFoodStationChange, foodStation,\n        onOrderNumberChange, orderNumber } = props;\n    return (\n        <form>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"fullName\">Full Name</label>\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           onChange={onFullNameChange}\n                           id=\"fullName\"\n                           name=\"fullName\"\n                           placeholder=\"Name Surname\"\n                           value={fullName} />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"dormAndRoom\">Dorm + Room #</label>\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           onChange={onDormAndRoomChange}\n                           id=\"dormAndRoom\"\n                           name=\"dormAndRoom\"\n                           placeholder=\"Anderson 101\"\n                           value={dormAndRoom} />\n                </div>\n            </div>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"foodStation\">GrubHub Station</label>\n                    <select className=\"form-control\"\n                            onChange={onFoodStationChange}\n                            id=\"foodStation\"\n                            name=\"foodStation\"\n                            value={foodStation}>\n                        <option disabled value={FoodStation.None}> -- select an option -- </option>\n                        <option value={FoodStation.Pit}>Pit</option>\n                        <option value={FoodStation.Starbucks}>Starbucks</option>\n                        <option value={FoodStation.GrabNGo}>Grab N' Go</option>\n                    </select>\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"orderNumber\">Order Number(s)</label>\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           onChange={onOrderNumberChange}\n                           id=\"orderNumber\"\n                           name=\"orderNumber\"\n                           placeholder=\"#22, #23\"\n                           value={orderNumber} />\n                </div>\n            </div>\n\n            <button type=\"submit\"\n                    id=\"submitButton\"\n                    className=\"btn btn-primary float-right\">Send pick-up request</button>\n        </form>\n    );\n}\n\nexport default FoodDeliveryForm;\n","import React from 'react';\nimport axios from \"axios\";\nimport './MyDeliveriesPanel.css';\n\nclass MyDeliveriesPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            apiUrl: props.apiUrl,\n            myDeliveries: [],\n            haveMyDeliveriesLoaded: false\n        };\n\n        this.getDeliveries = this.getDeliveries.bind(this);\n    }\n\n    componentDidMount() {\n        this.getDeliveries();\n    }\n\n    async getDeliveries() {\n        axios.get(`${this.state.apiUrl}/my_deliveries`)\n            .then(response => response.data)\n            .then(newMyDeliveries =>\n                this.setState({myDeliveries: newMyDeliveries,\n                               haveMyDeliveriesLoaded: true}))\n            .catch(error => this.setState({error: error, haveMyDeliveriesLoaded: true}));\n    }\n\n    render() {\n        const { error, myDeliveries, haveMyDeliveriesLoaded } = this.state;\n        const myDeliveriesList = myDeliveries.map((req) => (\n            <li key={req._id} className=\"list-group-item d-flex justify-content-between align-items-center mb-2\">\n               {req.foodStation}\n                <div className=\"d-flex align-items-center float-right\">\n                    <div style={{marginRight: \"1rem\"}}>\n                        {req.time}\n                    </div>\n                </div>\n            </li>\n        ));\n\n        return (\n            <div id=\"my-deliveries\">\n                <div id=\"load-my-deliveries\"\n                     style={haveMyDeliveriesLoaded ? {display: 'none'} : {}}>\n                    <img src=\"loading.gif\" alt=\"Loading...\" />\n                </div>\n                <div id=\"error-my-deliveries\"\n                     className=\"alert alert-danger\"\n                     style={error === null ? {display: 'none'}: {}}>\n                     An error has occured. Please try again.\n                </div>\n                <ul id=\"deliveries-list\"\n                    className=\"list-group\"\n                    style={haveMyDeliveriesLoaded ? {} : {display: 'none'}}>\n                    {myDeliveriesList}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default MyDeliveriesPanel;\n","import React from 'react';\nimport './RequestsPanel.css';\nimport axios from \"axios\";\n\nfunction toLocalDelta(timestamp) {\n    return '15 minutes ago';\n}\n\nclass RequestsPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            requests: [],\n            haveRequestsLoaded: false\n        };\n\n        this.getRequests = this.getRequests.bind(this);\n    }\n\n    componentDidMount() {\n        this.getRequests();\n    }\n\n    async getRequests() {\n        axios.get(`${this.state.apiUrl}/requests`)\n            .then(response => response.data)\n            .then(newRequests => this.setState({requests: newRequests, haveRequestsLoaded: true}));\n    }\n\n    render() {\n        const { requests, haveRequestsLoaded } = this.state;\n        const requestsList = requests.map((req) => (\n            <li key={req._id} className=\"list-group-item d-flex justify-content-between align-items-center mb-2\">\n               {req.foodStation}\n                <div className=\"d-flex align-items-center float-right\">\n                    <div style={{marginRight: \"1rem\"}}>\n                        {toLocalDelta(req.time)}\n                    </div>\n                    <button className=\"float-right btn btn-dark\">\n                        Deliver!\n                    </button>\n                </div>\n            </li>\n        ));\n\n        return (\n            <div id=\"requests\">\n                <div id=\"load-requests\"\n                     style={haveRequestsLoaded ? {display: 'none'} : {}}>\n                    <img src=\"loading.gif\" alt=\"Loading...\" />\n                </div>\n                <ul id=\"requests-list\"\n                    className=\"list-group\"\n                    style={haveRequestsLoaded ? {} : {display: 'none'}}>\n                    {requestsList}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default RequestsPanel;\n","import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport FoodDeliveryForm from './FoodDeliveryForm';\nimport MyDeliveriesPanel from './MyDeliveriesPanel';\nimport RequestsPanel from './RequestsPanel';\nimport FoodStation from './FoodStation';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            requests: [],\n            haveRequestsLoaded: false,\n            haveMyDeliveriesLoaded: false,\n            fullName: '',\n            dormAndRoom: '',\n            foodStation: FoodStation.None,\n            orderNumber: ''\n        };\n    }\n\n    fullNameChanged(event) {\n        this.setState({\n            fullName: event.target.value\n        });\n    }\n    dormAndRoomChanged(event) {\n        this.setState({\n            dormAndRoom: event.target.value\n        });\n    }\n    foodStationChanged(event) {\n        this.setState({\n            foodStation: event.target.value\n        })\n    }\n    orderNumberChanged(event) {\n        this.setState({\n            orderNumber: event.target.value\n        });\n    }\n\n    render() {\n      return (\n        <div id=\"App\" className=\"container\">\n            <Router basename={process.env.PUBLIC_URL}\n                    hashType=\"noslash\">\n                <div id=\"navBar\">\n                    <NavBar\n                        title=\"PitBoss\"\n                        description=\"Help out and deliver food for students in quarantine! (UR only)\" />\n                </div>\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        render={() =>\n                            <RequestsPanel\n                                apiUrl={process.env.API_URL} />}\n                        exact />\n                    <Route\n                        path=\"/all-requests\"\n                        render={() =>\n                            <RequestsPanel\n                                apiUrl={process.env.API_URL} />}\n                        exact />\n                    <Route\n                        path=\"/ask-for-delivery\"\n                        render={() =>\n                        <div id=\"deliveryForm\">\n                            <FoodDeliveryForm\n                                onFullNameChange={this.fullNameChanged.bind(this)}\n                                fullName={this.state.fullName}\n                                onDormAndRoomChange={this.dormAndRoomChanged.bind(this)}\n                                dormAndRoom={this.state.dormAndRoom}\n                                onFoodStationChange={this.foodStationChanged.bind(this)}\n                                foodStation={this.state.foodStation}\n                                onOrderNumberChange={this.orderNumberChanged.bind(this)}\n                                orderNumber={this.state.orderNumber} />\n                        </div>}\n                        exact />\n                    <Route\n                        path=\"/my-deliveries\"\n                        render={() =>\n                        <div id=\"myDeliveriesPanel\">\n                            <MyDeliveriesPanel\n                                haveMyDeliveriesLoaded={this.state.myDeliveriesLoaded} />\n                        </div>}\n                        exact />\n                </Switch>\n            </Router>\n        </div>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}