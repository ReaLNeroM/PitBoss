{"version":3,"sources":["NavBar.js","FoodStation.js","FoodDeliveryForm.js","MyDeliveriesPanel.js","ShortStrings.js","RequestsPanel.js","RegisterForm.js","LoginForm.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","state","apiUrl","title","isLoggedIn","onLoginChange","prevProps","oldTitle","oldIsLoggedin","this","setState","fetch","method","credentials","then","response","json","data","userId","location","doLogout","bind","tab","pathname","slice","prettyTabName","toPrettyTabName","className","as","Link","to","data-toggle","aria-expanded","type","data-target","aria-controls","aria-label","id","Nav","href","aria-haspopup","aria-labelledby","onClick","React","Component","withRouter","FoodStation","None","Pit","Starbucks","GrabNGo","FoodDeliveryForm","foodStation","event","target","value","preventDefault","formData","FormData","request","schemaVersion","orderNumber","get","validationError","trim","validateRequest","body","JSON","stringify","headers","history","push","alert","foodStationChanged","handleSubmit","onSubmit","onChange","name","required","disabled","placeholder","MyDeliveriesPanel","error","myDeliveries","haveMyDeliveriesLoaded","getDeliveries","Error","message","catch","myDeliveriesList","map","delivery","index","style","display","src","process","alt","strings","prefixAgo","prefixFromNow","suffixAgo","suffixFromNow","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","wordSeparator","RequestsPanel","requests","haveRequestsLoaded","getRequests","newRequests","requestsLength","length","requestsList","req","key","marginRight","timestamp","formatter","buildFormatter","englishStrings","time","Date","parse","date","toLocalDelta","created","RegisterForm","hasAllergy","checked","fullName","dormAndRoom","email","allergies","password","registerData","includes","allergyChanged","tabIndex","role","aria-hidden","data-dismiss","autoComplete","defaultChecked","htmlFor","Login","loginData","status","console","log","App","startSession","ok","statusText","err","basename","hashType","LoginForm","exact","path","render","class","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6bcd955.chunk.js","sourcesContent":["import React from 'react';\nimport Nav from 'react-bootstrap/Nav'\nimport { Link, withRouter } from 'react-router-dom'\n\nfunction toPrettyTabName(tab){\n    if(tab === \"all-requests\"){\n        return \"Deliver!\";\n    } else if(tab === \"ask-for-delivery\"){\n        return \"Request\";\n    } else if(tab === \"my-deliveries\"){\n        return \"My history\"\n    } else {\n        return \"\";\n    }\n}\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            title: props.title,\n            isLoggedIn: props.isLoggedIn,\n            onLoginChange: props.onLoginChange\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { title: oldTitle, isLoggedIn: oldIsLoggedin } = prevProps;\n        const { title, isLoggedIn } = this.props;\n\n        if (title !== oldTitle || isLoggedIn !== oldIsLoggedin) {\n            this.setState({ title: title, isLoggedIn: isLoggedIn });\n        }\n    }\n\n    async doLogout() {\n        fetch(`${this.state.apiUrl}/auth/logout`, {\n            method: 'POST',\n            credentials: 'include'\n        })\n            .then(response => response.json())\n            .then(data => this.state.onLoginChange({\n                isLoggedIn: false,\n                userId: null\n            }));\n    }\n\n    render() {\n        const { title, isLoggedIn } = this.state;\n        const { location } = this.props;\n        const doLogout = this.doLogout.bind(this);\n        const tab = location.pathname.slice(1);\n        const prettyTabName = toPrettyTabName(tab);\n\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark primary-color\">\n                <Link as={Link} className=\"navbar-brand\" to=\"all-requests\">{title}</Link>\n\n                <div className=\"navbar-toggler\" data-toggle=\"collapse\"\n                    aria-expanded=\"false\">\n                    {prettyTabName}\n                </div>\n\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n                    aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className={\"nav-item \" + ((tab === \"all-requests\" || tab === \"\") ? \"active\" : \"\")}>\n                            <Nav.Link className=\"nav-link\" as={Link} href=\"all-requests\" to=\"all-requests\">\n                                Deliver!\n                            </Nav.Link>\n                        </li>\n                        <li className={\"nav-item \" + (tab === \"ask-for-delivery\" ? \"active\" : \"\")}>\n                            <Nav.Link className=\"nav-link\" as={Link} href=\"ask-for-delivery\" to=\"ask-for-delivery\">\n                                Ask for delivery\n                            </Nav.Link>\n                        </li>\n                        <li className={\"nav-item \" + (tab === \"my-deliveries\" ? \"active\" : \"\")}>\n                            <Nav.Link className=\"nav-link\" as={Link} href=\"my-deliveries\" to=\"my-deliveries\">\n                                My requests and deliveries\n                            </Nav.Link>\n                        </li>\n                    </ul>\n\n                    <ul className=\"navbar-nav mr-auto mr-sm-2\">\n                        <li className=\"nav-item dropdown\">\n                            <div\n                                className=\"nav-link dropdown-toggle waves-effect waves-light\"\n                                id=\"navbarDropdownMenuLink-4\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                href=\"#\"\n                                aria-expanded=\"true\">\n                                <i className=\"fas fa-user\" />\n                                {isLoggedIn ? \"Profile\" : \"Not logged in\"}\n                            </div>\n                            <div\n                                className=\"dropdown-menu dropdown-menu-right dropdown-info\"\n                                aria-labelledby=\"navbarDropdownMenuLink-4\">\n                                {isLoggedIn === false &&\n                                    <div>\n                                        <div className=\"dropdown-item waves-effect waves-light\" data-toggle=\"modal\" data-target=\"#registerModal\">\n                                            Register\n                                        </div>\n                                        <div className=\"dropdown-item waves-effect waves-light\" data-toggle=\"modal\" data-target=\"#loginModal\">\n                                            Login\n                                        </div>\n                                    </div>}\n                                {isLoggedIn === true &&\n                                    <div>\n                                        <div className=\"dropdown-item waves-effect waves-light\" data-toggle=\"modal\" data-target=\"#myProfileModal\">\n                                            My profile\n                                        </div>\n                                        <button onClick={doLogout} className=\"dropdown-item waves-effect waves-light\">\n                                            Logout\n                                        </button>\n                                    </div>}\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(NavBar);","const FoodStation = {\n    None: \"\", // Empty string isn't ideal, but required for correct <select required> behavior.\n    Pit: \"Pit\",\n    Starbucks: \"Starbucks\",\n    GrabNGo: \"Grab N' Go\"\n}\n\nexport default FoodStation;","import React from 'react';\nimport FoodStation from './FoodStation';\nimport { withRouter } from 'react-router-dom';\n\nfunction validateRequest(request){\n    if(request.schemaVersion.trim() === ''){\n        return \"Schema version is empty\";\n    }\n\n    return \"\";\n}\n\nclass FoodDeliveryForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            foodStation: FoodStation.None,\n            userId: props.userId\n        };\n    }\n\n    foodStationChanged(event) {\n        this.setState({\n            foodStation: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { apiUrl, userId } = this.state;\n        const formData = new FormData(event.target);\n\n        const schemaVersion = \"request.1\";\n        const foodStation = this.state.foodStation; // hack because select's default\n                                                    // value doesn't always work.\n        const orderNumber = formData.get(\"orderNumber\");\n\n        const request = {\n            schemaVersion,\n            userId,\n            foodStation,\n            orderNumber\n        };\n        const validationError = validateRequest(request);\n\n        if(validationError === ''){\n            fetch(`${apiUrl}/create-request`, {\n                method: 'POST',\n                credentials: 'include',\n                body: JSON.stringify(request),\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }).then(this.props.history.push('/all-requests'));\n        } else {\n            alert(`Error: ${validationError}.`);\n        }\n    }\n\n    render() {\n        const { foodStation } = this.state;\n        const foodStationChanged = this.foodStationChanged.bind(this);\n        const handleSubmit = this.handleSubmit.bind(this)\n\n        return (\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                        <select className=\"form-control\"\n                                onChange={foodStationChanged}\n                                id=\"foodStation\"\n                                name=\"foodStation\"\n                                value={foodStation}\n                                required >\n                            <option disabled value={FoodStation.None}> -- Select GrubHub Station -- </option>\n                            <option value={FoodStation.Pit}>Pit</option>\n                            <option value={FoodStation.Starbucks}>Starbucks</option>\n                            <option value={FoodStation.GrabNGo}>Grab N' Go</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               id=\"orderNumber\"\n                               name=\"orderNumber\"\n                               placeholder=\"Order Number(s)\"\n                               required />\n                    </div>\n                </div>\n\n                <button type=\"submit\"\n                        id=\"submitButton\"\n                        className=\"btn btn-primary float-right\">Send pick-up request</button>\n            </form>\n        );\n    }\n}\n\nexport default withRouter(FoodDeliveryForm);\n","import React from 'react';\nimport './MyDeliveriesPanel.css';\n\nclass MyDeliveriesPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            apiUrl: props.apiUrl,\n            myDeliveries: [],\n            haveMyDeliveriesLoaded: false\n        };\n\n        this.getDeliveries = this.getDeliveries.bind(this);\n    }\n\n    componentDidMount() {\n        this.getDeliveries();\n    }\n\n    async getDeliveries() {\n        fetch(`${this.state.apiUrl}/my-deliveries`)\n            .then(response => response.json())\n            .then(data => {\n                if('message' in data){\n                    throw new Error(data.message);\n                }\n\n                this.setState({myDeliveries: data,\n                               haveMyDeliveriesLoaded: true});\n            })\n            .catch(error => this.setState({error: error, myDeliveries: [], haveMyDeliveriesLoaded: true}));\n    }\n\n    render() {\n        const { error, myDeliveries, haveMyDeliveriesLoaded } = this.state;\n        const myDeliveriesList = myDeliveries.map((delivery, index) => <div />);\n\n        return (\n            <div id=\"my-deliveries\">\n                <div id=\"load-my-deliveries\"\n                     style={haveMyDeliveriesLoaded ? {display: 'none'} : {}}>\n                    <img src={process.env.PUBLIC_URL + \"/loading.gif\"} alt=\"Loading...\" />\n                </div>\n                <div id=\"error-my-deliveries\"\n                     className=\"alert alert-info\"\n                     style={error === null ? {display: 'none'}: {}}>\n                     This tab hasn't been implemented yet, please wait ;)\n                </div>\n                <ul id=\"deliveries-list\"\n                    className=\"list-group\"\n                    style={haveMyDeliveriesLoaded ? {} : {display: 'none'}}>\n                    {myDeliveriesList}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default MyDeliveriesPanel;\n","/* @flow */\n\n// English shortened\nconst strings = {\n  prefixAgo: null,\n  prefixFromNow: null,\n  suffixAgo: 'ago',\n  suffixFromNow: '',\n  seconds: '<1 min',\n  minute: '1 min',\n  minutes: '%d mins',\n  hour: '1 hr',\n  hours: '%d hrs',\n  day: '1 day',\n  days: '%d days',\n  month: '1 mon',\n  months: '%d mon',\n  year: '1 yr',\n  years: '%d yrs',\n  wordSeparator: ' ',\n}\n\nexport default strings\n","import React from 'react';\nimport './RequestsPanel.css';\nimport TimeAgo from 'react-timeago';\nimport englishStrings from './ShortStrings';\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter';\n\nfunction toLocalDelta(timestamp) {\n    const formatter = buildFormatter(englishStrings);\n    const time = new Date(Date.parse(timestamp));\n    return <TimeAgo date={time} formatter={formatter} />;\n}\n\nclass RequestsPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            requests: [],\n            haveRequestsLoaded: false\n        };\n\n        this.getRequests = this.getRequests.bind(this);\n    }\n\n    componentDidMount() {\n        this.getRequests();\n    }\n\n    async getRequests() {\n        fetch(`${this.state.apiUrl}/get-requests`, {\n            credentials: 'include'\n        })\n            .then(response => response.json())\n            .then(newRequests => this.setState({requests: newRequests, haveRequestsLoaded: true}));\n    }\n\n    render() {\n        const { requests, haveRequestsLoaded } = this.state;\n        const requestsLength = requests.length;\n        const requestsList = requests.map((req, index) => (\n            <li\n                key={index}\n                className={\"list-group-item d-flex justify-content-between align-items-center \" + ((index !== requestsLength - 1) ? \"mb-2\" : \"\")}>\n               {req.foodStation}\n                <div className=\"d-flex align-items-center float-right\">\n                    <div style={{marginRight: \".50rem\"}}>\n                        {toLocalDelta(req.created)}\n                    </div>\n                    <button className=\"float-right btn btn-dark\">\n                        Deliver!\n                    </button>\n                </div>\n            </li>\n        ));\n\n        return (\n            <div id=\"requests\">\n                <div id=\"load-requests\"\n                     style={haveRequestsLoaded ? {display: 'none'} : {}}>\n                    <img src={process.env.PUBLIC_URL + \"/loading.gif\"} alt=\"Loading...\" />\n                </div>\n                <ul id=\"requests-list\"\n                    className=\"list-group\"\n                    style={haveRequestsLoaded ? {} : {display: 'none'}}>\n                    {requestsList}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default RequestsPanel;\n","import React from 'react';\n\nfunction validateRequest(registerData){\n    if(registerData.schemaVersion.trim() === ''){\n        return 'Schema version is empty';\n    } else if(!registerData.fullName.trim().includes(' ')){\n        return 'Please enter full name';\n    } else if(!registerData.email.includes('@u.rochester.edu')){\n        return 'Please enter valid e-mail (must contain @u.rochester.edu)';\n    } else if(!registerData.password.length > 6){\n        return 'Please enter a secure password (6 characters or above)'\n    }\n\n    return '';\n}\n\nclass RegisterForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            hasAllergy: false,\n            onLoginChange: props.onLoginChange\n        };\n    }\n\n    allergyChanged(event) {\n        this.setState({\n            hasAllergy: event.target.checked\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const onLoginChange = this.state.onLoginChange.bind(this);\n        const { apiUrl, hasAllergy } = this.state;\n\n        const formData = new FormData(event.target);\n\n        const schemaVersion = 'user.1';\n        const fullName = formData.get('fullName');\n        const dormAndRoom = formData.get('dormAndRoom');\n        const email = formData.get('email');\n        var allergies = formData.get('allergies');\n        if (allergies === null){\n            allergies = \"\";\n        }\n\n        const password = formData.get('password');\n        const passwordRepeat = formData.get('password-repeat');\n\n        const registerData = {\n            schemaVersion,\n            fullName,\n            dormAndRoom,\n            email,\n            password,\n            hasAllergy,\n            allergies\n        };\n\n        const validationError =\n            (password !== passwordRepeat) ?\n                \"Passwords do not match\" :\n                validateRequest(registerData);\n\n        if(validationError === ''){\n            fetch(`${apiUrl}/auth/register`, {\n                method: 'POST',\n                credentials: 'include',\n                body: JSON.stringify(registerData),\n                headers: {\n                    'content-type': 'application/json'\n                }\n            })\n                .then(response => response.json())\n                .then(data => onLoginChange({\n                    isLoggedIn: true,\n                    userId: data.userId\n                }));\n        } else {\n            alert(`Error: ${validationError}.`);\n        }\n    }\n\n    render() {\n        const { hasAllergy } = this.state;\n        const allergyChanged = this.allergyChanged.bind(this);\n        const handleSubmit = this.handleSubmit.bind(this);\n\n        return (\n            <div className=\"modal fade\" id=\"registerModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"registerModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"registerModalLabel\">Register an account</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"modal-body\">\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"fullName\"\n                                    name=\"fullName\"\n                                    placeholder=\"Full Name\"\n                                    required />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"dormAndRoom\"\n                                    name=\"dormAndRoom\"\n                                    placeholder=\"Dorm and Room\"\n                                    required />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"email\"\n                                    className=\"form-control\"\n                                    id=\"register-email\"\n                                    name=\"email\"\n                                    placeholder=\"email@u.rochester.edu\"\n                                    autoComplete=\"username\"\n                                    required />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\"\n                                    className=\"form-control\"\n                                    id=\"register-password\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    autoComplete=\"new-password\"\n                                    required />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\"\n                                    className=\"form-control\"\n                                    id=\"register-password-repeat\"\n                                    name=\"password-repeat\"\n                                    placeholder=\"Password (confirm)\"\n                                    autoComplete=\"new-password\"\n                                    required />\n                                </div>\n                                <div className=\"form-group form-check\">\n                                    <input\n                                        type=\"checkbox\"\n                                        defaultChecked={hasAllergy}\n                                        onChange={allergyChanged}\n                                        className=\"form-check-input\"\n                                        id=\"exampleCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Any allergies?</label>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"allergies\"\n                                        name=\"allergies\"\n                                        placeholder=\"Allergies\"\n                                        disabled={hasAllergy ? \"\" : \"disabled\"}\n                                        required={hasAllergy ? \"required\" : \"\"} />\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-secondary\"\n                                    data-dismiss=\"modal\">\n                                    Close\n                                </button>\n                                <button\n                                    type=\"submit\"\n                                    id=\"registerButton\"\n                                    className=\"btn btn-primary\">\n                                    Register\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RegisterForm;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction validateRequest(loginData){\n    if(!loginData.email.includes('@u.rochester.edu')){\n        return 'Please enter valid e-mail (must contain @u.rochester.edu)';\n    } else if(!loginData.password.length > 6){\n        return 'Please enter a secure password (6 characters or above)'\n    }\n\n    return '';\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            error: null\n        };\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const formData = new FormData(event.target);\n\n        const email = formData.get('email');\n        const password = formData.get('password');\n\n        const loginData = {\n            email,\n            password\n        };\n\n        const validationError = validateRequest(loginData);\n\n        if(validationError === ''){\n            fetch(`${this.state.apiUrl}/auth/login`, {\n                method: 'POST',\n                credentials: 'include',\n                body: JSON.stringify(loginData),\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }).then(response => {\n                response.json()\n                    .then(data => {\n                        if(response.status === 200){\n                            this.setState({error: null});\n                            console.log(`Logged in as ${data.userId}`);\n                            this.props.onLoginChange({\n                                isLoggedIn: true,\n                                userId: data.userId\n                            });\n                        } else {\n                            this.setState({error: `${response.status} Error: ${data.message}`});\n                        }\n                    })\n            });\n        } else {\n            alert(`Error: ${validationError}.`);\n        }\n    }\n\n    render() {\n        const error = this.state.error;\n        const handleSubmit = this.handleSubmit.bind(this);\n\n        return (\n            <div className=\"modal fade\" id=\"loginModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"loginModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"loginModalLabel\">Login to your account</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        {error !== null &&\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {error}\n                            </div>}\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"modal-body\">\n                                <div className=\"form-group\">\n                                    <input type=\"email\"\n                                    className=\"form-control\"\n                                    id=\"loginEmail\"\n                                    name=\"email\"\n                                    placeholder=\"email@u.rochester.edu\"\n                                    autoComplete=\"username\"\n                                    required />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\"\n                                    className=\"form-control\"\n                                    id=\"loginPassword\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    autoComplete=\"current-password\"\n                                    required />\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-secondary\"\n                                    data-dismiss=\"modal\">\n                                    Close\n                                </button>\n                                <button\n                                    type=\"submit\"\n                                    id=\"loginButton\"\n                                    className=\"btn btn-primary\">\n                                    Login\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login);","import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport FoodDeliveryForm from './FoodDeliveryForm';\nimport MyDeliveriesPanel from './MyDeliveriesPanel';\nimport RequestsPanel from './RequestsPanel';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            apiUrl: process.env.REACT_APP_API_URL,\n            isLoggedIn: false,\n            userId: null\n        };\n\n        this.startSession = this.startSession.bind(this);\n    }\n\n    componentDidMount(){\n        this.startSession();\n    }\n\n    async startSession(){\n        const { apiUrl } = this.state;\n\n        fetch(`${apiUrl}/auth/start-session`, {\n            method: 'GET',\n            credentials: 'include'\n        })\n            .then(response => {\n                if(!response.ok){\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(data => {\n                this.setState({\n                    isLoggedIn: true,\n                    userId: data.userId\n                });\n            })\n            .catch(err => {});\n    }\n\n    onLoginChange(event){\n        this.setState({\n            isLoggedIn: event.isLoggedIn,\n            userId: event.userId\n        });\n    }\n\n    render() {\n        const { isLoggedIn, userId, apiUrl} = this.state;\n        const onLoginChange = this.onLoginChange.bind(this);\n\n        return (\n            <div id=\"App\" className=\"container\">\n                <Router basename={process.env.PUBLIC_URL}\n                        hashType=\"noslash\">\n                    <div id=\"navBar\">\n                        <NavBar\n                            apiUrl={apiUrl}\n                            title=\"PitBoss\"\n                            onLoginChange={onLoginChange}\n                            isLoggedIn={isLoggedIn} />\n                    </div>\n                    <RegisterForm\n                        apiUrl={apiUrl}\n                        onLoginChange={onLoginChange} />\n                    <LoginForm\n                        apiUrl={apiUrl}\n                        onLoginChange={onLoginChange} />\n                    <Switch>\n                        <Route exact path=\"/\" >\n                            <RequestsPanel\n                                apiUrl={apiUrl} />\n                        </Route>\n                        <Route\n                            exact path=\"/all-requests\"\n                            render={() =>\n                                    <RequestsPanel\n                                        apiUrl={apiUrl} />} />\n                        <Route\n                            exact path=\"/ask-for-delivery\"\n                            render={() =>\n                                <div id=\"deliveryForm\">\n                                    <FoodDeliveryForm\n                                        apiUrl={apiUrl}\n                                        userId={userId} />\n                                </div>} />\n                        <Route\n                            exact path=\"/my-deliveries\"\n                            render={() =>\n                                <div id=\"myDeliveriesPanel\">\n                                    <MyDeliveriesPanel\n                                        apiUrl={apiUrl} />\n                                </div>} />\n                        <Route\n                            render={() =>\n                                <div id=\"error\">\n                                    <h4 class=\"alert alert-danger mb-0\" role=\"alert\">\n                                        404 error: Page not found.\n                                    </h4>\n                                </div>} />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}