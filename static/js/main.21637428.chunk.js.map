{"version":3,"sources":["NavBar.js","FoodStation.js","FoodDeliveryForm.js","MyDeliveriesPanel.js","RequestsPanel.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","state","title","description","this","tab","location","pathname","slice","className","as","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Nav","href","aria-haspopup","aria-labelledby","React","Component","withRouter","FoodStation","None","Pit","Starbucks","GrabNGo","FoodDeliveryForm","apiUrl","fullName","dormAndRoom","email","foodStation","orderNumber","event","setState","target","value","preventDefault","formData","FormData","request","schemaVersion","get","validationError","trim","includes","validateRequest","fetch","method","body","JSON","stringify","headers","then","history","push","alert","fullNameChanged","bind","dormAndRoomChanged","emailChanged","foodStationChanged","orderNumberChanged","handleSubmit","onSubmit","onChange","name","placeholder","disabled","MyDeliveriesPanel","error","myDeliveries","haveMyDeliveriesLoaded","getDeliveries","axios","response","data","newMyDeliveries","catch","myDeliveriesList","map","req","key","_id","style","marginRight","time","display","src","process","alt","RequestsPanel","requests","haveRequestsLoaded","getRequests","newRequests","requestsList","timestamp","Date","parse","ago","toLocalDelta","created","App","basename","hashType","path","exact","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.21637428.chunk.js","sourcesContent":["import React from 'react';\nimport Nav from 'react-bootstrap/Nav'\nimport { Link, withRouter } from 'react-router-dom'\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: props.title,\n            description: props.description\n        };\n    }\n\n    render() {\n        const { title } = this.state;\n        const { location } = this.props;\n        const tab = location.pathname.slice(1);\n\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark primary-color\">\n                <Link as={Link} className=\"navbar-brand\" to=\"all-requests\">{title}</Link>\n\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n                    aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className={\"nav-item \" + (tab === \"all-requests\" ? \"active\" : \"\")}>\n                            <Nav.Link className=\"nav-link\" as={Link} href=\"all-requests\" to=\"all-requests\">\n                            Deliver!\n                            </Nav.Link>\n                        </li>\n                        <li className={\"nav-item \" + (tab === \"ask-for-delivery\" ? \"active\" : \"\")}>\n                            <Nav.Link className=\"nav-link\" as={Link} href=\"ask-for-delivery\" to=\"ask-for-delivery\">\n                                Ask for delivery\n                            </Nav.Link>\n                        </li>\n                        <li className={\"nav-item \" + (tab === \"my-deliveries\" ? \"active\" : \"\")}>\n                            <Nav.Link className=\"nav-link\" as={Link} href=\"my-deliveries\" to=\"my-deliveries\">\n                            My deliveries\n                            </Nav.Link>\n                        </li>\n                    </ul>\n\n                    <ul className=\"navbar-nav mr-auto mr-sm-2\">\n                        <li className=\"nav-item dropdown\">\n                            <div\n                                className=\"nav-link dropdown-toggle waves-effect waves-light\"\n                                id=\"navbarDropdownMenuLink-4\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                href=\"#\"\n                                aria-expanded=\"true\">\n                                <i className=\"fas fa-user\" />\n                                Profile\n                            </div>\n                            <div\n                                className=\"dropdown-menu dropdown-menu-right dropdown-info\"\n                                aria-labelledby=\"navbarDropdownMenuLink-4\">\n                                <div className=\"dropdown-item waves-effect waves-light\" href=\"#\">\n                                    My account\n                                </div>\n                                <div className=\"dropdown-item waves-effect waves-light\" href=\"#\">\n                                    Log out\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(NavBar);","const FoodStation = {\n    None: \"N/A\",\n    Pit: \"Pit\",\n    Starbucks: \"Starbucks\",\n    GrabNGo: \"Grab N' Go\"\n}\n\nexport default FoodStation;","import React from 'react';\nimport FoodStation from './FoodStation';\nimport { withRouter } from 'react-router-dom';\n\nfunction validateRequest(request){\n    if(request.schemaVersion.trim() === ''){\n        return \"Schema version is empty\";\n    } else if(request.fullName.trim() === '' || !request.fullName.trim().includes(' ')){\n        return \"Please enter full name\";\n    } else if(request.dormAndRoom.trim() === ''){\n        return \"Please enter dorm and room number\";\n    } else if(request.email.trim() === '' || !request.email.includes(\"@u.rochester.edu\")){\n        return \"Please enter valid e-mail (must contain @u.rochester.edu)\";\n    } else if(request.foodStation === \"N/A\"){\n        return \"Please enter what GrubHub station you ordered from\";\n    } else if(request.orderNumber === ''){\n        return \"Please enter order number\";\n    }\n\n    return \"\";\n}\n\nclass FoodDeliveryForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            fullName: '',\n            dormAndRoom: '',\n            email: '',\n            foodStation: FoodStation.None,\n            orderNumber: ''\n        };\n    }\n\n    fullNameChanged(event) {\n        this.setState({\n            fullName: event.target.value\n        });\n    }\n    dormAndRoomChanged(event) {\n        this.setState({\n            dormAndRoom: event.target.value\n        });\n    }\n    emailChanged(event) {\n        this.setState({\n            email: event.target.value\n        });\n    }\n    foodStationChanged(event) {\n        this.setState({\n            foodStation: event.target.value\n        })\n    }\n    orderNumberChanged(event) {\n        this.setState({\n            orderNumber: event.target.value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const formData = new FormData(event.target);\n\n        const schemaVersion = \"1\";\n        const fullName = formData.get(\"fullName\");\n        const dormAndRoom = formData.get(\"dormAndRoom\");\n        const email = formData.get(\"email\");\n        const foodStation = this.state.foodStation; // hack because select's default\n                                                    // value doesn't always work.\n        const orderNumber = formData.get(\"orderNumber\");\n\n        const request = {\n            schemaVersion,\n            fullName,\n            dormAndRoom,\n            email,\n            foodStation,\n            orderNumber\n        };\n        const validationError = validateRequest(request);\n\n        if(validationError === ''){\n            fetch(`${this.state.apiUrl}/create_request`, {\n                method: 'POST',\n                body: JSON.stringify(request),\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }).then(this.props.history.push('/all-requests'))\n        } else {\n            alert(`Error: ${validationError}.`);\n        }\n    }\n\n    render() {\n        const { fullName, dormAndRoom, email, foodStation, orderNumber} = this.state;\n        const fullNameChanged = this.fullNameChanged.bind(this);\n        const dormAndRoomChanged = this.dormAndRoomChanged.bind(this);\n        const emailChanged = this.emailChanged.bind(this);\n        const foodStationChanged = this.foodStationChanged.bind(this);\n        const orderNumberChanged = this.orderNumberChanged.bind(this);\n        const handleSubmit = this.handleSubmit.bind(this)\n\n        return (\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           onChange={fullNameChanged}\n                           id=\"fullName\"\n                           name=\"fullName\"\n                           placeholder=\"Full Name\"\n                           value={fullName} />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           onChange={dormAndRoomChanged}\n                           id=\"dormAndRoom\"\n                           name=\"dormAndRoom\"\n                           placeholder=\"Dorm and Room\"\n                           value={dormAndRoom} />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           onChange={emailChanged}\n                           id=\"email\"\n                           name=\"email\"\n                           placeholder=\"email@u.rochester.edu\"\n                           value={email} />\n                </div>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                        <select className=\"form-control\"\n                                onChange={foodStationChanged}\n                                id=\"foodStation\"\n                                name=\"foodStation\"\n                                value={foodStation}>\n                            <option disabled value={FoodStation.None}> GrubHub Station </option>\n                            <option value={FoodStation.Pit}>Pit</option>\n                            <option value={FoodStation.Starbucks}>Starbucks</option>\n                            <option value={FoodStation.GrabNGo}>Grab N' Go</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               onChange={orderNumberChanged}\n                               id=\"orderNumber\"\n                               name=\"orderNumber\"\n                               placeholder=\"Order Number(s)\"\n                               value={orderNumber} />\n                    </div>\n                </div>\n\n                <button type=\"submit\"\n                        id=\"submitButton\"\n                        className=\"btn btn-primary float-right\">Send pick-up request</button>\n            </form>\n        );\n    }\n}\n\nexport default withRouter(FoodDeliveryForm);\n","import React from 'react';\nimport axios from \"axios\";\nimport './MyDeliveriesPanel.css';\n\nclass MyDeliveriesPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            apiUrl: props.apiUrl,\n            myDeliveries: [],\n            haveMyDeliveriesLoaded: false\n        };\n\n        this.getDeliveries = this.getDeliveries.bind(this);\n    }\n\n    componentDidMount() {\n        this.getDeliveries();\n    }\n\n    async getDeliveries() {\n        axios.get(`${this.state.apiUrl}/my_deliveries`)\n            .then(response => response.data)\n            .then(newMyDeliveries =>\n                this.setState({myDeliveries: newMyDeliveries,\n                               haveMyDeliveriesLoaded: true}))\n            .catch(error => this.setState({error: error, haveMyDeliveriesLoaded: true}));\n    }\n\n    render() {\n        const { error, myDeliveries, haveMyDeliveriesLoaded } = this.state;\n        const myDeliveriesList = myDeliveries.map((req) => (\n            <li key={req._id} className=\"list-group-item d-flex justify-content-between align-items-center mb-2\">\n               {req.foodStation}\n                <div className=\"d-flex align-items-center float-right\">\n                    <div style={{marginRight: \"1rem\"}}>\n                        {req.time}\n                    </div>\n                </div>\n            </li>\n        ));\n\n        return (\n            <div id=\"my-deliveries\">\n                <div id=\"load-my-deliveries\"\n                     style={haveMyDeliveriesLoaded ? {display: 'none'} : {}}>\n                    <img src={process.env.PUBLIC_URL + \"/loading.gif\"} alt=\"Loading...\" />\n                </div>\n                <div id=\"error-my-deliveries\"\n                     className=\"alert alert-danger\"\n                     style={error === null ? {display: 'none'}: {}}>\n                     An error has occured. Please try again.\n                </div>\n                <ul id=\"deliveries-list\"\n                    className=\"list-group\"\n                    style={haveMyDeliveriesLoaded ? {} : {display: 'none'}}>\n                    {myDeliveriesList}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default MyDeliveriesPanel;\n","import React from 'react';\nimport './RequestsPanel.css';\nimport axios from \"axios\";\nimport ago from \"s-ago\";\n\nfunction toLocalDelta(timestamp) {\n    const time = new Date(Date.parse(timestamp));\n    return ago(time);\n}\n\nclass RequestsPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiUrl: props.apiUrl,\n            requests: [],\n            haveRequestsLoaded: false\n        };\n\n        this.getRequests = this.getRequests.bind(this);\n    }\n\n    componentDidMount() {\n        this.getRequests();\n    }\n\n    async getRequests() {\n        axios.get(`${this.state.apiUrl}/requests`)\n            .then(response => response.data)\n            .then(newRequests => this.setState({requests: newRequests, haveRequestsLoaded: true}));\n    }\n\n    render() {\n        const { requests, haveRequestsLoaded } = this.state;\n        const requestsList = requests.map((req) => (\n            <li key={req._id} className=\"list-group-item d-flex justify-content-between align-items-center mb-2\">\n               {req.foodStation}\n                <div className=\"d-flex align-items-center float-right\">\n                    <div style={{marginRight: \"1rem\"}}>\n                        {toLocalDelta(req.created)}\n                    </div>\n                    <button className=\"float-right btn btn-dark\">\n                        Deliver!\n                    </button>\n                </div>\n            </li>\n        ));\n\n        return (\n            <div id=\"requests\">\n                <div id=\"load-requests\"\n                     style={haveRequestsLoaded ? {display: 'none'} : {}}>\n                    <img src={process.env.PUBLIC_URL + \"/loading.gif\"} alt=\"Loading...\" />\n                </div>\n                <ul id=\"requests-list\"\n                    className=\"list-group\"\n                    style={haveRequestsLoaded ? {} : {display: 'none'}}>\n                    {requestsList}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default RequestsPanel;\n","import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport FoodDeliveryForm from './FoodDeliveryForm';\nimport MyDeliveriesPanel from './MyDeliveriesPanel';\nimport RequestsPanel from './RequestsPanel';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nclass App extends Component {\n    render() {\n      return (\n        <div id=\"App\" className=\"container\">\n            <Router basename={process.env.PUBLIC_URL}\n                    hashType=\"noslash\">\n                <div id=\"navBar\">\n                    <NavBar\n                        title=\"PitBoss\"\n                        description=\"Help out and deliver food for students in quarantine! (UR only)\" />\n                </div>\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact >\n                        <RequestsPanel\n                                    apiUrl={process.env.REACT_APP_API_URL} />\n                    </Route>\n                    <Route\n                        path=\"/all-requests\"\n                        render={() =>\n                                <RequestsPanel\n                                    apiUrl={process.env.REACT_APP_API_URL} />}\n                            exact />\n                    <Route\n                        path=\"/ask-for-delivery\"\n                        render={() =>\n                            <div id=\"deliveryForm\">\n                                <FoodDeliveryForm\n                                    apiUrl={process.env.REACT_APP_API_URL} />\n                            </div>}\n                        exact />\n                    <Route\n                        path=\"/my-deliveries\"\n                        render={() =>\n                            <div id=\"myDeliveriesPanel\">\n                                <MyDeliveriesPanel />\n                            </div>}\n                        exact />\n                </Switch>\n            </Router>\n        </div>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}